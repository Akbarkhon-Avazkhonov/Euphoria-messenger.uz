version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: euphoria-messenger.uz
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis-stack:
    image: redis/redis-stack-server:latest
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
      - redis-stack
    env_file:  # Load environment variables from the .env.production file
      - ./backend/.env.production
    volumes:
      - /etc/letsencrypt/live/euphoria-messenger.uz:/etc/letsencrypt/live/euphoria-messenger.uz:ro  # Примонтировать сертификаты
    ports:
      - "4000:4000"
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    env_file:  # Load environment variables from the .env.production file
      - ./frontend/.env.production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
