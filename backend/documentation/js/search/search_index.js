var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.613,1,1.822]],["body/controllers/AppController.html",[0,1.984,1,2.24,2,1.398,3,0.356,4,0.306,5,0.306,6,2.107,7,0.59,8,1.428,9,3.785,10,3.785,11,2.991,12,2.977,13,0.04,14,3.643,15,1.346,16,2.567,17,1.66,18,2.458,19,2.567,20,2.107,21,2.204,22,3.785,23,3.643,24,2.567,25,0.906,26,0.906,27,0.734,28,0.906,29,0.837,30,2.107,31,0.734,32,2.058,33,2.107,34,0.356,35,0.017,36,1.804,37,1.804,38,1.66,39,2.567,40,2.567,41,2.567,42,2.567,43,2.567,44,0.025,45,0.025]],["title/modules/AppModule.html",[46,1.291,47,1.822]],["body/modules/AppModule.html",[1,2.697,2,2.076,3,0.38,4,0.327,5,0.327,13,0.04,29,1.146,31,0.783,32,2.509,33,2.247,34,0.38,35,0.018,44,0.026,45,0.026,46,1.911,47,3.417,48,1.33,49,1.33,50,1.683,51,1.683,52,1.33,53,2.697,54,1.683,55,2.247,56,2.247,57,2.247,58,2.812,59,2.812,60,2.344,61,1.683,62,1.491,63,2.738,64,3.812,65,2.738,66,2.738,67,2.738]],["title/injectables/AppService.html",[32,1.44,68,1.161]],["body/injectables/AppService.html",[3,0.393,4,0.338,5,0.338,7,0.651,8,1.53,9,3.951,10,3.951,11,3.204,13,0.04,15,1.419,17,1.75,18,2.536,20,3.204,21,2.274,22,3.951,25,0.999,26,0.999,27,0.81,28,0.999,29,0.651,31,0.81,32,1.897,34,0.393,35,0.019,38,1.75,44,0.027,45,0.027,68,1.53,69,1.741,70,2.325,71,2.832,72,2.832,73,2.832,74,2.832,75,2.832,76,2.832]],["title/classes/Auth.html",[35,0.019,77,1.613]],["body/classes/Auth.html",[3,0.591,4,0.508,5,0.508,13,0.037,34,0.591,35,0.028,44,0.035,45,0.035,77,2.762,78,1.502,79,3.494]],["title/controllers/AuthController.html",[0,1.613,80,1.822]],["body/controllers/AuthController.html",[0,0.961,2,0.961,3,0.245,4,0.21,5,0.21,7,0.405,8,1.079,12,3.093,13,0.04,15,1.399,17,1.725,18,2.375,25,1.465,26,1.465,27,1.187,28,1.465,29,0.88,30,1.448,31,0.504,34,0.245,35,0.012,36,1.24,37,1.24,38,1.725,44,0.019,45,0.019,77,0.961,80,1.693,81,1.448,82,1.764,83,1.338,84,2.354,85,1.693,86,2.261,87,1.693,88,1.693,89,1.448,90,2.474,91,3.388,92,1.764,93,1.764,94,1.085,95,2.754,96,1.764,97,2.396,98,1.448,99,2.754,100,1.764,101,1.085,102,2.754,103,1.764,104,1.24,105,2.589,106,2.754,107,1.764,108,2.754,109,1.764,110,1.764,111,1.646,112,1.448,113,1.085,114,1.936,115,1.085,116,1.764,117,1.764,118,1.764,119,1.764,120,1.764,121,1.764,122,1.764,123,1.764,124,1.764,125,1.764,126,1.764,127,1.764]],["title/modules/AuthModule.html",[46,1.291,58,1.613]],["body/modules/AuthModule.html",[2,2.296,3,0.441,4,0.379,5,0.379,13,0.039,29,1.088,31,0.908,34,0.441,35,0.021,44,0.029,45,0.029,46,2.064,48,1.543,49,1.543,50,1.953,51,1.953,52,1.543,53,2.911,54,1.953,58,2.939,60,2.593,61,1.953,62,1.729,80,2.911,111,2.623,112,2.607,128,2.607,129,2.607,130,3.176,131,3.176]],["title/injectables/AuthService.html",[68,1.161,111,1.44]],["body/injectables/AuthService.html",[3,0.263,4,0.226,5,0.226,7,0.436,8,1.142,13,0.04,15,1.441,17,1.909,18,2.087,21,2.177,25,1.516,26,1.516,27,1.228,28,1.516,29,0.815,31,0.543,34,0.263,35,0.012,38,1.777,44,0.02,45,0.02,68,1.142,69,1.167,77,2.338,83,1.416,84,2.447,85,1.792,86,2.392,87,1.792,88,1.792,89,2.392,90,2.478,94,1.792,97,2.468,98,2.392,101,1.792,104,2.049,105,2.57,111,1.416,113,1.167,114,2.049,115,1.167,132,1.558,133,2.912,134,1.898,135,1.898,136,1.898,137,1.898,138,1.898,139,1.898,140,1.898,141,3.525,142,1.558,143,1.334,144,1.334,145,1.558]],["title/classes/CreateAuthDto.html",[35,0.019,90,1.44]],["body/classes/CreateAuthDto.html",[3,0.499,4,0.429,5,0.429,7,0.825,13,0.038,15,1.452,18,2.57,27,1.307,34,0.499,35,0.024,44,0.031,45,0.031,78,1.268,90,2.22,146,4.125,147,2.525,148,2.488,149,5.024,150,5.024,151,3.592,152,3.592]],["title/classes/CreateSessionDto.html",[35,0.019,153,1.44]],["body/classes/CreateSessionDto.html",[3,0.586,4,0.504,5,0.504,13,0.037,34,0.586,35,0.028,44,0.034,45,0.034,78,1.491,153,2.454,154,3.468,155,2.97]],["title/classes/RedisIoAdapter.html",[35,0.019,156,2.083]],["body/classes/RedisIoAdapter.html",[3,0.324,4,0.279,5,0.279,7,0.537,8,1.335,13,0.04,15,1.277,17,1.335,21,1.751,25,0.825,26,0.825,27,0.974,28,0.825,29,1.015,34,0.324,35,0.015,38,0.916,44,0.023,45,0.023,78,0.825,133,3.299,148,1.855,156,2.394,157,1.919,158,2.394,159,4.019,160,4.019,161,4.019,162,4.416,163,3.406,164,3.406,165,2.337,166,2.337,167,2.796,168,3.406,169,4.416,170,4.416,171,2.337,172,2.337,173,2.337,174,1.919,175,2.394,176,2.337,177,1.919,178,1.919,179,3.406,180,1.919,181,3.299,182,2.337,183,2.337,184,2.337,185,3.406,186,2.337,187,2.337,188,2.337,189,2.337,190,2.337,191,2.337,192,2.796,193,2.337,194,2.337]],["title/classes/Session.html",[35,0.019,195,1.44]],["body/classes/Session.html",[3,0.591,4,0.508,5,0.508,13,0.037,34,0.591,35,0.028,44,0.035,45,0.035,78,1.502,195,2.465,196,3.494]],["title/classes/SessionGateway.html",[35,0.019,197,1.822]],["body/classes/SessionGateway.html",[3,0.24,4,0.206,5,0.206,7,0.397,8,1.062,12,3.066,13,0.04,15,1.449,17,1.709,21,1.901,25,1.451,26,1.451,27,1.175,28,1.451,29,1.002,31,0.494,34,0.24,35,0.011,36,1.214,37,1.214,38,1.611,44,0.018,45,0.018,78,0.61,83,1.316,84,2.327,85,1.665,87,1.665,88,1.665,94,1.062,97,2.061,101,1.062,113,1.062,115,1.062,153,2.119,197,1.665,198,1.418,199,3.784,200,1.727,201,1.727,202,2.119,203,1.727,204,1.418,205,2.709,206,1.727,207,2.709,208,1.727,209,2.709,210,1.727,211,1.727,212,1.727,213,1.727,214,2.709,215,1.727,216,1.727,217,2.483,218,2.709,219,1.727,220,2.709,221,1.727,222,1.727,223,1.727,224,1.418,225,1.418,226,1.904,227,1.727,228,1.062,229,1.727,230,2.709,231,1.727,232,1.727,233,1.727,234,1.727,235,1.727,236,1.727,237,1.727,238,1.727,239,1.727,240,1.727,241,1.727,242,1.727]],["title/guards/SessionGuard.html",[228,1.822,243,2.083]],["body/guards/SessionGuard.html",[3,0.376,4,0.324,5,0.324,7,0.623,8,1.484,13,0.041,15,0.862,17,1.063,25,0.957,26,0.957,27,0.775,28,0.957,29,1.003,31,0.775,34,0.376,35,0.018,38,1.063,44,0.026,45,0.026,68,1.484,167,3.109,175,1.906,181,3.109,195,1.318,228,2.329,244,2.712,245,2.226,246,4.97,247,2.712,248,4.724,249,2.712,250,3.787,251,3.787,252,4.364,253,2.226,254,3.787,255,2.712,256,2.712,257,2.712,258,4.364,259,2.712,260,2.712,261,2.712,262,2.712,263,2.712,264,2.226]],["title/modules/SessionModule.html",[46,1.291,59,1.613]],["body/modules/SessionModule.html",[3,0.448,4,0.385,5,0.385,13,0.039,29,1.097,31,0.923,34,0.448,35,0.021,44,0.029,45,0.029,46,2.081,48,1.569,49,1.569,50,1.986,51,1.986,52,1.569,53,2.936,54,1.986,59,2.953,60,2.622,61,1.986,62,1.758,197,2.622,202,2.635,225,2.651,265,2.651,266,2.651,267,3.229,268,3.229]],["title/injectables/SessionService.html",[68,1.161,202,1.44]],["body/injectables/SessionService.html",[3,0.287,4,0.247,5,0.247,7,0.475,8,1.219,13,0.04,15,1.418,17,1.906,18,2.168,21,2.231,25,1.468,26,1.468,27,1.19,28,1.468,29,0.859,31,0.591,34,0.287,35,0.014,38,1.748,44,0.021,45,0.021,68,1.219,69,1.272,83,1.512,84,2.558,85,1.913,87,1.913,88,1.913,94,1.913,97,2.552,101,1.913,104,2.187,113,1.272,115,1.272,141,3.662,142,1.698,143,1.454,144,1.454,145,1.698,153,2.168,195,2.168,202,1.512,204,2.554,217,2.648,226,2.187,269,1.698,270,2.068,271,2.068,272,2.068,273,2.068,274,2.068]],["title/classes/UpdateAuthDto.html",[35,0.019,105,1.613]],["body/classes/UpdateAuthDto.html",[3,0.525,4,0.451,5,0.451,13,0.039,29,1.084,34,0.525,35,0.025,44,0.032,45,0.032,78,1.334,83,1.837,90,1.837,105,2.57,114,2.658,147,2.658,158,3.317,275,3.104,276,4.719,277,3.104,278,2.658,279,2.658]],["title/classes/UpdateSessionDto.html",[35,0.019,217,1.613]],["body/classes/UpdateSessionDto.html",[3,0.481,4,0.413,5,0.413,7,0.795,13,0.039,15,1.101,21,1.945,27,0.99,29,1.025,34,0.481,35,0.023,44,0.03,45,0.03,78,1.222,83,1.683,97,2.689,148,2.43,153,1.683,155,2.434,158,3.137,217,2.43,226,2.434,277,2.842,278,2.434,279,2.434,280,3.663,281,4.463,282,3.462]],["title/coverage.html",[283,2.83]],["body/coverage.html",[0,1.888,1,1.473,5,0.286,6,1.967,13,0.039,27,0.685,32,1.164,35,0.034,44,0.024,45,0.024,52,1.164,68,1.597,70,1.967,77,1.304,79,1.967,80,1.473,81,1.967,90,1.164,105,1.304,111,1.164,132,1.967,143,1.684,146,1.967,147,2.438,153,1.164,154,1.967,155,2.438,156,1.684,157,1.967,195,1.164,196,1.967,197,1.473,198,1.967,202,1.164,217,1.304,228,1.473,243,1.684,245,1.967,269,1.967,275,1.967,280,1.967,283,1.684,284,1.967,285,2.396,286,2.396,287,5.73,288,4.075,289,3.468,290,2.396,291,5.097,292,1.967,293,3.468,294,2.438,295,1.967,296,2.396,297,1.967,298,3.468,299,2.396,300,2.396,301,2.396,302,2.396]],["title/dependencies.html",[49,1.729,303,2.039]],["body/dependencies.html",[13,0.041,31,0.934,44,0.029,45,0.029,49,1.587,174,3.527,175,3.02,177,2.681,178,2.681,180,2.681,224,2.681,253,2.681,278,2.296,279,2.296,304,4.801,305,3.266,306,3.266,307,3.266,308,3.266,309,4.296,310,3.266,311,3.266,312,3.266,313,3.266,314,3.266,315,3.266,316,3.266,317,3.266,318,3.266,319,3.266,320,3.266,321,3.266,322,3.266]],["title/miscellaneous/functions.html",[323,1.527,324,2.921]],["body/miscellaneous/functions.html",[7,0.874,13,0.035,25,1.343,26,1.343,28,1.343,44,0.032,45,0.032,52,2.507,195,1.85,292,3.124,294,2.675,295,3.89,323,2.34,324,3.124,325,3.806,326,3.124,327,3.806,328,4.738,329,4.738,330,3.124,331,3.124,332,3.806,333,3.806]],["title/index.html",[7,0.571,334,2.483,335,2.483]],["body/index.html",[4,0.235,13,0.037,44,0.02,45,0.02,62,2.209,144,1.384,192,1.617,283,1.384,284,1.617,336,1.969,337,1.969,338,3.63,339,1.969,340,1.969,341,1.969,342,1.969,343,1.969,344,1.617,345,3.63,346,1.969,347,1.969,348,1.969,349,4.058,350,1.969,351,3.63,352,4.782,353,1.969,354,4.782,355,1.969,356,1.969,357,1.969,358,2.998,359,1.969,360,1.969,361,1.969,362,3.63,363,1.969,364,2.998,365,1.969,366,1.969,367,1.969,368,4.058,369,1.969,370,1.969,371,1.969,372,1.969,373,1.969,374,4.058,375,2.998,376,1.969,377,3.63,378,1.969,379,3.331,380,2.998,381,1.969,382,1.969,383,1.969,384,1.969,385,1.969,386,1.969,387,3.63,388,1.969,389,1.969,390,1.969,391,2.998,392,1.969,393,1.969,394,1.969,395,3.63,396,1.969,397,1.969,398,1.969,399,1.969,400,1.969,401,1.969,402,1.969,403,2.998,404,1.969,405,1.969,406,1.969,407,1.969,408,1.969,409,2.998,410,1.969,411,1.969,412,1.969,413,2.998,414,2.998,415,1.969,416,1.969,417,1.969,418,1.969,419,1.969,420,1.969,421,1.969,422,1.969,423,1.969,424,1.969,425,1.969,426,1.617,427,1.969,428,1.969,429,1.969,430,1.969,431,1.969,432,1.969,433,1.617]],["title/modules.html",[48,1.956]],["body/modules.html",[13,0.034,44,0.034,45,0.034,47,2.506,48,1.98,58,2.219,59,2.219,379,4.366,434,5.319,435,5.319,436,5.319]],["title/overview.html",[437,3.304]],["body/overview.html",[2,1.683,13,0.037,32,2.27,44,0.028,45,0.028,46,1.347,47,3.418,48,1.502,49,1.502,50,1.9,51,1.9,52,1.502,53,1.9,54,1.9,55,2.537,56,2.537,57,2.537,58,2.833,59,2.833,60,2.546,61,1.9,62,1.683,69,1.9,78,1.091,111,2.27,128,2.537,129,2.537,202,2.27,243,2.172,265,2.537,266,2.537,437,2.537,438,4.141,439,3.09,440,3.09,441,3.09]],["title/properties.html",[148,1.938,303,2.039]],["body/properties.html",[13,0.04,44,0.034,45,0.034,148,2.301,344,3.468,426,3.468,433,3.468,442,4.225,443,4.225,444,4.225]],["title/miscellaneous/variables.html",[323,1.527,445,2.921]],["body/miscellaneous/variables.html",[7,0.957,13,0.038,44,0.034,45,0.034,264,3.418,294,2.927,297,4.11,323,2.56,326,3.418,330,3.418,331,3.418,445,3.418,446,4.164]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":443,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":441,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["10.4.1",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":439,"title":{},"body":{"overview.html":{}}}],["2.24.11",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":438,"title":{},"body":{"overview.html":{}}}],["4.7.0",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":440,"title":{},"body":{"overview.html":{}}}],["8.12.0",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["action",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{}}}],["adapter",{"_index":178,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["adapterconstructor",{"_index":161,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["adds",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{}}}],["amazing",{"_index":419,"title":{},"body":{"index.html":{}}}],["apihash",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiid",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":391,"title":{},"body":{"index.html":{}}}],["applications",{"_index":343,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":47,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":32,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{}}}],["auth",{"_index":77,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["auth.controller",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":147,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:2",{"_index":152,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:3",{"_index":151,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.service",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":80,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":58,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":426,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":187,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["b",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["backers",{"_index":420,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["board",{"_index":412,"title":{},"body":{"index.html":{}}}],["body",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":251,"title":{},"body":{"guards/SessionGuard.html":{}}}],["bootstrap",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":436,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":434,"title":{},"body":{"modules.html":{}}}],["building",{"_index":339,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":246,"title":{},"body":{"guards/SessionGuard.html":{}}}],["canactivate(context",{"_index":247,"title":{},"body":{"guards/SessionGuard.html":{}}}],["channel",{"_index":382,"title":{},"body":{"index.html":{}}}],["check",{"_index":368,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["classes",{"_index":78,"title":{},"body":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"overview.html":{}}}],["client",{"_index":256,"title":{},"body":{"guards/SessionGuard.html":{}}}],["client.disconnect",{"_index":263,"title":{},"body":{"guards/SessionGuard.html":{}}}],["client.handshake.headers",{"_index":260,"title":{},"body":{"guards/SessionGuard.html":{}}}],["cluster_appmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_sessionmodule",{"_index":265,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_providers",{"_index":266,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["come",{"_index":371,"title":{},"body":{"index.html":{}}}],["connection",{"_index":230,"title":{},"body":{"classes/SessionGateway.html":{}}}],["connecttoredis",{"_index":162,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["console.log('new",{"_index":233,"title":{},"body":{"classes/SessionGateway.html":{}}}],["console.log(cookie",{"_index":261,"title":{},"body":{"guards/SessionGuard.html":{}}}],["const",{"_index":181,"title":{},"body":{"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{}}}],["constructor",{"_index":200,"title":{},"body":{"classes/SessionGateway.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SessionGateway.html":{}}}],["constructor(sessionservice",{"_index":201,"title":{},"body":{"classes/SessionGateway.html":{}}}],["context",{"_index":250,"title":{},"body":{"guards/SessionGuard.html":{}}}],["context.switchtows().getclient",{"_index":257,"title":{},"body":{"guards/SessionGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["cookie",{"_index":258,"title":{},"body":{"guards/SessionGuard.html":{}}}],["courses",{"_index":389,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":283,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["create(@body",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["create(@messagebody",{"_index":234,"title":{},"body":{"classes/SessionGateway.html":{}}}],["create(createauthdto",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["create(createsessiondto",{"_index":204,"title":{},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["createadapter",{"_index":176,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createadapter(pubclient",{"_index":191,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createauthdto",{"_index":90,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createclient",{"_index":179,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createioserver",{"_index":163,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createioserver(port",{"_index":168,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createsessiondto",{"_index":153,"title":{"classes/CreateSessionDto.html":{}},"body":{"classes/CreateSessionDto.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["declarations",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SessionGateway.html":{}}}],["deeper",{"_index":384,"title":{},"body":{"index.html":{}}}],["default",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{}}}],["delete",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(':id",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":344,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":355,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":397,"title":{},"body":{"index.html":{}}}],["discord",{"_index":381,"title":{},"body":{"index.html":{}}}],["dive",{"_index":383,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":284,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["dto/update",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["e2e",{"_index":365,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":340,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":402,"title":{},"body":{"index.html":{}}}],["example",{"_index":351,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":248,"title":{},"body":{"guards/SessionGuard.html":{}}}],["experience",{"_index":386,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["exports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["express",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":158,"title":{},"body":{"classes/RedisIoAdapter.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["few",{"_index":369,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["findall",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["findone",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["findone(@messagebody",{"_index":237,"title":{},"body":{"classes/SessionGateway.html":{}}}],["findone(@param('id",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["findone(id",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["follow",{"_index":405,"title":{},"body":{"index.html":{}}}],["framework",{"_index":338,"title":{},"body":{"index.html":{}}}],["full",{"_index":401,"title":{},"body":{"index.html":{}}}],["function",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":324,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('all",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get('sum/:a/:b",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["getall",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getsum",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getsum(@param('a",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["getsum(a",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":334,"title":{"index.html":{}},"body":{}}],["graph",{"_index":392,"title":{},"body":{"index.html":{}}}],["grow",{"_index":416,"title":{},"body":{"index.html":{}}}],["guard",{"_index":243,"title":{"guards/SessionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":244,"title":{},"body":{"guards/SessionGuard.html":{}}}],["handleconnection",{"_index":199,"title":{},"body":{"classes/SessionGateway.html":{}}}],["hands",{"_index":385,"title":{},"body":{"index.html":{}}}],["handy",{"_index":372,"title":{},"body":{"index.html":{}}}],["headers",{"_index":259,"title":{},"body":{"guards/SessionGuard.html":{}}}],["hello",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":399,"title":{},"body":{"index.html":{}}}],["here",{"_index":424,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":430,"title":{},"body":{"index.html":{}}}],["id",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{}}}],["identifier",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":255,"title":{},"body":{"guards/SessionGuard.html":{}}}],["import",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["injectable",{"_index":68,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["installcompile",{"_index":353,"title":{},"body":{"index.html":{}}}],["interact",{"_index":393,"title":{},"body":{"index.html":{}}}],["ioadapter",{"_index":159,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["job",{"_index":409,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":411,"title":{},"body":{"index.html":{}}}],["join",{"_index":422,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":427,"title":{},"body":{"index.html":{}}}],["learn",{"_index":376,"title":{},"body":{"index.html":{}}}],["legend",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["license",{"_index":433,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":414,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":407,"title":{},"body":{"index.html":{}}}],["login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(createauthdto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["looking",{"_index":408,"title":{},"body":{"index.html":{}}}],["loop",{"_index":404,"title":{},"body":{"index.html":{}}}],["matching",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["messagebody",{"_index":222,"title":{},"body":{"classes/SessionGateway.html":{}}}],["metadata",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{}}}],["miscellaneous",{"_index":323,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":413,"title":{},"body":{"index.html":{}}}],["mode",{"_index":358,"title":{},"body":{"index.html":{}}}],["module",{"_index":46,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":377,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":428,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":398,"title":{},"body":{"index.html":{}}}],["nest",{"_index":345,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":432,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":374,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":278,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":174,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":224,"title":{},"body":{"classes/SessionGateway.html":{},"dependencies.html":{}}}],["new",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["node.js",{"_index":337,"title":{},"body":{"index.html":{}}}],["npm",{"_index":352,"title":{},"body":{"index.html":{}}}],["number",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{}}}],["observable",{"_index":252,"title":{},"body":{"guards/SessionGuard.html":{}}}],["offer",{"_index":410,"title":{},"body":{"index.html":{}}}],["official",{"_index":387,"title":{},"body":{"index.html":{}}}],["open",{"_index":415,"title":{},"body":{"index.html":{}}}],["optional",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":169,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":437,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":303,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["param('b",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":400,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":277,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["partialtype(createauthdto",{"_index":276,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createsessiondto",{"_index":281,"title":{},"body":{"classes/UpdateSessionDto.html":{}}}],["password",{"_index":149,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["patch",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch(':id",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["pg",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":380,"title":{},"body":{"index.html":{}}}],["port",{"_index":172,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["post",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":160,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["process.env.api_hash",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process.env.api_id",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process.env.test_servers",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":360,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":336,"title":{},"body":{"index.html":{}}}],["project",{"_index":349,"title":{},"body":{"index.html":{}}}],["promise",{"_index":167,"title":{},"body":{"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{}}}],["promise.all([pubclient.connect",{"_index":188,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["properties",{"_index":148,"title":{"properties.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/RedisIoAdapter.html":{},"classes/UpdateSessionDto.html":{},"properties.html":{}}}],["providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["pubclient",{"_index":182,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["pubclient.duplicate",{"_index":186,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["questions",{"_index":378,"title":{},"body":{"index.html":{}}}],["read",{"_index":423,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SessionGateway.html":{}}}],["real",{"_index":394,"title":{},"body":{"index.html":{}}}],["redis",{"_index":180,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["redis://localhost:6379",{"_index":184,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["redisioadapter",{"_index":156,"title":{"classes/RedisIoAdapter.html":{}},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["reflect",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["remove(@messagebody",{"_index":241,"title":{},"body":{"classes/SessionGateway.html":{}}}],["remove(@param('id",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["remove(id",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["removes",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{}}}],["repository",{"_index":348,"title":{},"body":{"index.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["resources",{"_index":370,"title":{},"body":{"index.html":{}}}],["results",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{}}}],["returntype",{"_index":164,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["run",{"_index":354,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":253,"title":{},"body":{"guards/SessionGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":341,"title":{},"body":{"index.html":{}}}],["server",{"_index":192,"title":{},"body":{"classes/RedisIoAdapter.html":{},"index.html":{}}}],["server.adapter(this.adapterconstructor",{"_index":194,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["serveroptions",{"_index":170,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["session",{"_index":195,"title":{"classes/Session.html":{}},"body":{"classes/Session.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["session.dto",{"_index":226,"title":{},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{}}}],["session.dto.ts",{"_index":155,"title":{},"body":{"classes/CreateSessionDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["session.dto.ts:5",{"_index":282,"title":{},"body":{"classes/UpdateSessionDto.html":{}}}],["session.gateway",{"_index":268,"title":{},"body":{"modules/SessionModule.html":{}}}],["session.service",{"_index":225,"title":{},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{}}}],["session/session.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiongateway",{"_index":197,"title":{"classes/SessionGateway.html":{}},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{},"coverage.html":{}}}],["sessionguard",{"_index":228,"title":{"guards/SessionGuard.html":{}},"body":{"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"coverage.html":{}}}],["sessionmodule",{"_index":59,"title":{"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionservice",{"_index":202,"title":{"injectables/SessionService.html":{}},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"coverage.html":{},"overview.html":{}}}],["sessuon.guard",{"_index":229,"title":{},"body":{"classes/SessionGateway.html":{}}}],["setup",{"_index":350,"title":{},"body":{"index.html":{}}}],["side",{"_index":342,"title":{},"body":{"index.html":{}}}],["socket",{"_index":254,"title":{},"body":{"guards/SessionGuard.html":{}}}],["socket.io",{"_index":175,"title":{},"body":{"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{},"dependencies.html":{}}}],["socket.io/redis",{"_index":177,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"index.html":{}}}],["sponsors",{"_index":418,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../telegramclient.ts",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:5",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":146,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":275,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":79,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/other/redis.ts",{"_index":157,"title":{},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["src/other/redis.ts:18",{"_index":171,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/redis.ts:7",{"_index":165,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/redis.ts:9",{"_index":166,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/telegramclient.ts",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/session/dto/create",{"_index":154,"title":{},"body":{"classes/CreateSessionDto.html":{},"coverage.html":{}}}],["src/session/dto/update",{"_index":280,"title":{},"body":{"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["src/session/entities/session.entity.ts",{"_index":196,"title":{},"body":{"classes/Session.html":{},"coverage.html":{}}}],["src/session/session.gateway.ts",{"_index":198,"title":{},"body":{"classes/SessionGateway.html":{},"coverage.html":{}}}],["src/session/session.gateway.ts:15",{"_index":203,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:21",{"_index":212,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:25",{"_index":206,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:30",{"_index":208,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:35",{"_index":210,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:40",{"_index":219,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:45",{"_index":215,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.module.ts",{"_index":267,"title":{},"body":{"modules/SessionModule.html":{}}}],["src/session/session.service.ts",{"_index":269,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["src/session/session.service.ts:11",{"_index":271,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:15",{"_index":272,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:19",{"_index":274,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:23",{"_index":273,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:7",{"_index":270,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/sessuon.guard.ts",{"_index":245,"title":{},"body":{"guards/SessionGuard.html":{},"coverage.html":{}}}],["src/session/sessuon.guard.ts:7",{"_index":249,"title":{},"body":{"guards/SessionGuard.html":{}}}],["start",{"_index":356,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":359,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":361,"title":{},"body":{"index.html":{}}}],["started",{"_index":335,"title":{"index.html":{}},"body":{}}],["starter",{"_index":347,"title":{},"body":{"index.html":{}}}],["statements",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":403,"title":{},"body":{"index.html":{}}}],["string",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"injectables/SessionService.html":{}}}],["subclient",{"_index":185,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subclient.connect",{"_index":189,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subscribemessage",{"_index":221,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('connection",{"_index":232,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('createsession",{"_index":205,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('findallsession",{"_index":207,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('findonesession",{"_index":209,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('removesession",{"_index":214,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('updatesession",{"_index":218,"title":{},"body":{"classes/SessionGateway.html":{}}}],["sum",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["super.createioserver(port",{"_index":193,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["support",{"_index":379,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":435,"title":{},"body":{"modules.html":{}}}],["table",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["telegram",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["telegramclient",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["telegramclient(session",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":364,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":367,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":366,"title":{},"body":{"index.html":{}}}],["test_servers",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":362,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":417,"title":{},"body":{"index.html":{}}}],["this.adapterconstructor",{"_index":190,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["this.appservice.getall",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getsum(+a",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.create(createauthdto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findall",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findone(+id",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(createauthdto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.remove(+id",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.update(+id",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.sessionservice.create(createsessiondto",{"_index":235,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.findall",{"_index":236,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.findone(id",{"_index":238,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.remove(id",{"_index":242,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.update(updatesessiondto.id",{"_index":240,"title":{},"body":{"classes/SessionGateway.html":{}}}],["time",{"_index":395,"title":{},"body":{"index.html":{}}}],["touch",{"_index":425,"title":{},"body":{"index.html":{}}}],["true",{"_index":264,"title":{},"body":{"guards/SessionGuard.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":431,"title":{},"body":{"index.html":{}}}],["type",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["types",{"_index":279,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":346,"title":{},"body":{"index.html":{}}}],["unit",{"_index":363,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["unlicensed",{"_index":444,"title":{},"body":{"properties.html":{}}}],["update",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["update(@messagebody",{"_index":239,"title":{},"body":{"classes/SessionGateway.html":{}}}],["update(@param('id",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["update(id",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{}}}],["update(updatesessiondto",{"_index":216,"title":{},"body":{"classes/SessionGateway.html":{}}}],["updateauthdto",{"_index":105,"title":{"classes/UpdateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updates",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{},"index.html":{}}}],["updatesessiondto",{"_index":217,"title":{"classes/UpdateSessionDto.html":{}},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["url",{"_index":183,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["useguards",{"_index":227,"title":{},"body":{"classes/SessionGateway.html":{}}}],["useguards(sessionguard",{"_index":231,"title":{},"body":{"classes/SessionGateway.html":{}}}],["useguards(sessionguard)@subscribemessage('connection",{"_index":211,"title":{},"body":{"classes/SessionGateway.html":{}}}],["username",{"_index":150,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["using",{"_index":396,"title":{},"body":{"index.html":{}}}],["validate",{"_index":262,"title":{},"body":{"guards/SessionGuard.html":{}}}],["value",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":445,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":442,"title":{},"body":{"properties.html":{}}}],["video",{"_index":388,"title":{},"body":{"index.html":{}}}],["visit",{"_index":375,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":390,"title":{},"body":{"index.html":{}}}],["void",{"_index":213,"title":{},"body":{"classes/SessionGateway.html":{}}}],["watch",{"_index":357,"title":{},"body":{"index.html":{}}}],["website",{"_index":429,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":220,"title":{},"body":{"classes/SessionGateway.html":{}}}],["websocketserver",{"_index":223,"title":{},"body":{"classes/SessionGateway.html":{}}}],["working",{"_index":373,"title":{},"body":{"index.html":{}}}],["world",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":406,"title":{},"body":{"index.html":{}}}],["yes",{"_index":173,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["you'd",{"_index":421,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getSum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getSum\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSum(a: number, b: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sum/:a/:b')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('all')\n  getAll(): string {\n    return this.appService.getAll();\n  }\n\n  @Get('sum/:a/:b')\n  getSum(@Param('a') a: number, @Param('b') b: number): string {\n    return this.appService.getSum(+a, +b);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SessionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { SessionModule } from './session/session.module';\n\n@Module({\n  imports: [AuthModule, SessionModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getHello\n                            \n                            \n                                getSum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSum\n                        \n                    \n                \n            \n            \n                \ngetSum(a: number, b: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n\n  getAll(): string {\n    return 'All';\n  }\n  getSum(a: number, b: number): string {\n    return `Sum: ${a + b}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAuthDto: UpdateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthDto\n                                            \n                                                            UpdateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  login(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.login(createAuthDto);\n  }\n  @Post()\n  create(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.create(createAuthDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.authService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAuthDto: UpdateAuthDto) {\n    return this.authService.update(+id, updateAuthDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthDto: UpdateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthDto\n                                            \n                                                            UpdateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\n\n@Injectable()\nexport class AuthService {\n  async login(createAuthDto: CreateAuthDto) {\n    return createAuthDto;\n  }\n\n  create(createAuthDto: CreateAuthDto) {\n    return 'This action adds a new auth';\n  }\n\n  findAll() {\n    return `This action returns all auth`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} auth`;\n  }\n\n  update(id: number, updateAuthDto: UpdateAuthDto) {\n    return `This action updates a #${id} auth`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} auth`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSessionDto.html":{"url":"classes/CreateSessionDto.html","title":"class - CreateSessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/create-session.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSessionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisIoAdapter.html":{"url":"classes/RedisIoAdapter.html","title":"class - RedisIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisIoAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/redis.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IoAdapter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adapterConstructor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectToRedis\n                            \n                            \n                                createIOServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adapterConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReturnType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/other/redis.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        connectToRedis\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectToRedis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/redis.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createIOServer\n                        \n                    \n                \n            \n            \n                \ncreateIOServer(port: number, options?: ServerOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/redis.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        ServerOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IoAdapter } from '@nestjs/platform-socket.io';\nimport { ServerOptions } from 'socket.io';\nimport { createAdapter } from '@socket.io/redis-adapter';\nimport { createClient } from 'redis';\n\nexport class RedisIoAdapter extends IoAdapter {\n  private adapterConstructor: ReturnType;\n\n  async connectToRedis(): Promise {\n    const pubClient = createClient({ url: `redis://localhost:6379` });\n    const subClient = pubClient.duplicate();\n\n    await Promise.all([pubClient.connect(), subClient.connect()]);\n\n    this.adapterConstructor = createAdapter(pubClient, subClient);\n  }\n\n  createIOServer(port: number, options?: ServerOptions): any {\n    const server = super.createIOServer(port, options);\n    server.adapter(this.adapterConstructor);\n    return server;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session.html":{"url":"classes/Session.html","title":"class - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/entities/session.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Session {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionGateway.html":{"url":"classes/SessionGateway.html","title":"class - SessionGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                handleConnection\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/session/session.gateway.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSessionDto: CreateSessionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('createSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSessionDto\n                                            \n                                                            CreateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findAllSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findOneSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(SessionGuard)@SubscribeMessage('connection')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('removeSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSessionDto: UpdateSessionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('updateSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSessionDto\n                                            \n                                                            UpdateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n  \n} from '@nestjs/websockets';\nimport { SessionService } from './session.service';\nimport { CreateSessionDto } from './dto/create-session.dto';\nimport { UpdateSessionDto } from './dto/update-session.dto';\nimport { UseGuards } from '@nestjs/common';\nimport { SessionGuard } from './sessuon.guard';\n\n@WebSocketGateway()\nexport class SessionGateway {\n  constructor(private readonly sessionService: SessionService) {}\n\n  // on connection\n  @UseGuards(SessionGuard)\n  @SubscribeMessage('connection')\n  handleConnection() {\n    console.log('New connection');\n  }\n  @SubscribeMessage('createSession')\n  create(@MessageBody() createSessionDto: CreateSessionDto) {\n    return this.sessionService.create(createSessionDto);\n  }\n\n  @SubscribeMessage('findAllSession')\n  findAll() {\n    return this.sessionService.findAll();\n  }\n\n  @SubscribeMessage('findOneSession')\n  findOne(@MessageBody() id: number) {\n    return this.sessionService.findOne(id);\n  }\n\n  @SubscribeMessage('updateSession')\n  update(@MessageBody() updateSessionDto: UpdateSessionDto) {\n    return this.sessionService.update(updateSessionDto.id, updateSessionDto);\n  }\n\n  @SubscribeMessage('removeSession')\n  remove(@MessageBody() id: number) {\n    return this.sessionService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SessionGuard.html":{"url":"guards/SessionGuard.html","title":"guard - SessionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SessionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/session/sessuon.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/sessuon.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class SessionGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const client: Socket = context.switchToWs().getClient();\n\n    // Get the cookie from the headers\n    const cookie = client.handshake.headers;\n    console.log(cookie);\n\n    // Validate the session\n    if (!cookie) {\n      client.disconnect();\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionModule.html":{"url":"modules/SessionModule.html","title":"module - SessionModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nSessionService\n\nSessionService\n\n\n\nSessionModule\n\nSessionModule\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SessionService } from './session.service';\nimport { SessionGateway } from './session.gateway';\n\n@Module({\n  providers: [SessionGateway, SessionService],\n})\nexport class SessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createSessionDto: CreateSessionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSessionDto\n                                            \n                                                            CreateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSessionDto: UpdateSessionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSessionDto\n                                            \n                                                            UpdateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSessionDto } from './dto/create-session.dto';\nimport { UpdateSessionDto } from './dto/update-session.dto';\n\n@Injectable()\nexport class SessionService {\n  create(createSessionDto: CreateSessionDto) {\n    return 'This action adds a new session';\n  }\n\n  findAll() {\n    return `This action returns all session`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} session`;\n  }\n\n  update(id: number, updateSessionDto: UpdateSessionDto) {\n    return `This action updates a #${id} session`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} session`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSessionDto.html":{"url":"classes/UpdateSessionDto.html","title":"class - UpdateSessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/update-session.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSessionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/session/dto/update-session.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSessionDto } from './create-session.dto';\n\nexport class UpdateSessionDto extends PartialType(CreateSessionDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/other/redis.ts\n            \n            class\n            RedisIoAdapter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/other/telegramClient.ts\n            \n            function\n            telegramClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/other/telegramClient.ts\n            \n            variable\n            TEST_SERVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/dto/create-session.dto.ts\n            \n            class\n            CreateSessionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/dto/update-session.dto.ts\n            \n            class\n            UpdateSessionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/session/entities/session.entity.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/session.gateway.ts\n            \n            class\n            SessionGateway\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/session/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/session/sessuon.guard.ts\n            \n            guard\n            SessionGuard\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.4.1\n        \n            @nestjs/websockets : ^10.4.1\n        \n            @socket.io/redis-adapter : ^8.3.0\n        \n            bcrypt : ^5.1.1\n        \n            pg : ^8.12.0\n        \n            redis : ^4.7.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.7.5\n        \n            telegram : ^2.24.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            telegramClient   (src/.../telegramClient.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/other/telegramClient.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        telegramClient\n                        \n                    \n                \n            \n            \n                \ntelegramClient(session, apiId, apiHash)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                session\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                apiId\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    process.env.API_ID\n                                            \n\n                                        \n                                        \n                                                apiHash\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    process.env.API_HASH\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TEST_SERVERS   (src/.../telegramClient.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/other/telegramClient.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TEST_SERVERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.TEST_SERVERS == 'true'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
