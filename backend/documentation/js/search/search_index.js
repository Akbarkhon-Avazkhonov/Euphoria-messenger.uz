var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Admin.html",[0,0.131,1,1.887]],["body/classes/Admin.html",[0,0.195,1,3.316,2,1.482,3,0.354,4,0.308,5,0.308,6,4.261,7,0.354,8,0.024,9,0.022,10,0.022]],["title/controllers/AdminController.html",[11,1.498,12,2.264]],["body/controllers/AdminController.html",[0,0.091,1,1.314,3,0.166,4,0.144,5,0.144,7,0.166,8,0.026,9,0.013,10,0.013,11,1.043,12,2.381,13,1.043,14,1.996,15,1.756,16,0.494,17,1.12,18,1.28,19,2.276,20,1.695,21,1.695,22,1.695,23,2.36,24,3.007,25,2.86,26,3.195,27,1.322,28,2.36,29,1.607,30,1.503,31,1.231,32,1.607,33,1.614,34,2.36,35,1.123,36,1.857,37,2.36,38,2.36,39,2.388,40,1.123,41,2.651,42,2.36,43,1.212,44,3.506,45,2.651,46,2.36,47,0.805,48,2.651,49,1.756,50,1.756,51,1.756,52,1.996,53,0.494,54,2.391,55,1.996,56,1.123,57,2.651,58,1.123,59,1.576,60,2.36,61,2.36,62,1.212,63,1.212,64,2.36,65,2.36,66,1.314,67,1.314,68,1.756,69,1.614,70,2.36,71,2.36,72,2.36,73,1.756,74,1.756,75,2.36,76,1.756,77,2.36,78,1.756,79,2.36]],["title/guards/AdminGuard.html",[59,2.264,80,2.521]],["body/guards/AdminGuard.html",[0,0.096,3,0.173,4,0.151,5,0.151,7,0.173,8,0.026,9,0.014,10,0.014,16,0.517,17,1.158,27,1.135,29,1.482,30,1.386,31,1.348,32,1.482,33,1.158,36,1.158,47,0.633,53,0.517,59,2.462,66,1.374,69,1.158,81,1.836,82,2.087,83,2.679,84,4.138,85,2.947,86,3.686,87,1.649,88,2.468,89,4.645,90,2.468,91,3.117,92,4.138,93,2.468,94,2.087,95,2.462,96,3.686,97,5.693,98,2.468,99,4.412,100,1.084,101,4.894,102,1.649,103,2.087,104,1.836,105,3.269,106,2.468,107,3.64,108,2.468,109,3.282,110,2.266,111,2.468,112,3.731,113,1.649,114,2.468,115,1.649,116,1.836,117,2.468,118,2.468,119,2.468,120,2.087,121,2.468,122,2.468,123,2.468,124,2.468,125,2.468,126,2.468,127,2.468,128,1.649,129,2.468,130,2.468,131,2.468]],["title/modules/AdminModule.html",[132,1.138,133,2.058]],["body/modules/AdminModule.html",[0,0.138,3,0.25,4,0.217,5,0.217,7,0.25,8,0.026,9,0.018,10,0.018,12,3.603,13,2.111,47,0.864,53,0.745,54,3.45,55,3.005,102,2.374,115,2.374,116,2.644,128,2.374,132,1.811,133,3.762,134,1.571,135,1.571,136,1.825,137,1.825,138,1.571,139,2.77,140,1.825,141,3.005,142,3.005,143,2.452,144,1.825,145,1.69,146,3.554,147,3.554,148,3.554,149,3.554,150,3.005,151,3.554,152,3.005,153,3.554,154,3.554,155,3.554]],["title/injectables/AdminService.html",[54,1.887,100,0.997]],["body/injectables/AdminService.html",[0,0.059,1,2.627,3,0.107,4,0.093,5,0.093,7,0.107,8,0.026,9,0.009,10,0.009,16,0.673,17,0.789,18,1.601,19,1.776,20,1.195,21,1.195,22,1.195,24,2.079,27,1.147,29,1.389,30,1.608,31,1.065,32,1.389,33,1.483,35,1.195,36,1.01,39,1.971,40,1.195,43,1.29,44,2.866,47,0.64,53,0.318,54,1.398,56,0.722,57,1.868,58,0.722,67,0.845,69,1.3,83,2.707,85,1.677,87,1.677,89,3.99,100,0.739,102,1.014,105,3.419,107,1.868,109,1.129,110,0.779,112,1.283,113,2.763,115,1.014,116,1.129,156,0.779,157,1.283,158,1.518,159,2.482,160,1.518,161,2.512,162,1.518,163,1.518,164,2.124,165,1.518,166,2.629,167,1.518,168,1.518,169,1.518,170,2.124,171,1.518,172,2.124,173,2.124,174,2.124,175,4.137,176,3.734,177,3.419,178,2.146,179,2.512,180,3.316,181,1.518,182,1.677,183,2.512,184,2.512,185,2.512,186,1.518,187,3.316,188,1.518,189,1.129,190,1.518,191,1.518,192,1.518,193,2.512,194,1.518,195,1.518,196,1.518,197,2.124,198,1.518,199,3.213,200,1.518,201,3.213,202,1.283,203,2.512,204,1.518,205,1.518,206,1.518,207,1.518,208,1.518,209,2.512,210,1.518,211,1.518,212,3.213,213,1.518,214,1.518,215,1.518,216,2.494,217,0.922,218,1.014]],["title/controllers/AppController.html",[11,1.498,219,2.264]],["body/controllers/AppController.html",[0,0.148,3,0.269,4,0.233,5,0.233,7,0.269,8,0.026,9,0.019,10,0.019,11,2.216,13,1.69,16,0.801,17,1.575,25,2.129,27,0.984,33,1.201,36,1.575,47,0.803,53,0.801,62,1.963,66,2.129,67,2.129,69,1.201,219,3.348,220,3.233,221,5.02,222,3.823,223,4.239,224,3.823,225,3.823,226,3.114,227,3.233,228,5.013,229,3.233,230,3.823,231,3.823,232,2.554,233,3.823]],["title/modules/AppModule.html",[132,1.138,234,2.264]],["body/modules/AppModule.html",[0,0.114,3,0.207,4,0.18,5,0.18,7,0.207,8,0.026,9,0.016,10,0.016,13,1.854,47,0.882,53,0.617,132,1.64,133,3.549,134,1.302,135,1.302,136,1.512,137,1.512,138,1.302,139,2.507,140,1.512,143,2.153,144,1.512,145,1.401,150,3.546,219,3.261,226,3.254,227,2.49,234,4.452,235,2.49,236,2.49,237,2.49,238,3.549,239,3.549,240,3.549,241,3.549,242,2.945,243,2.945,244,2.945,245,2.945,246,2.945,247,2.945,248,2.945]],["title/injectables/AppService.html",[100,0.997,226,1.887]],["body/injectables/AppService.html",[0,0.169,3,0.306,4,0.266,5,0.266,7,0.306,8,0.025,9,0.02,10,0.02,16,0.913,17,1.713,27,1.122,33,1.37,36,1.713,47,0.626,53,0.913,69,1.37,100,1.603,156,2.239,221,5.272,226,3.036,232,2.912,249,3.686,250,4.36,251,4.36]],["title/classes/Auth.html",[0,0.131,63,1.741]],["body/classes/Auth.html",[0,0.195,2,1.482,3,0.354,4,0.308,5,0.308,7,0.354,8,0.024,9,0.022,10,0.022,63,3.058,252,4.261]],["title/controllers/AuthController.html",[11,1.498,253,2.264]],["body/controllers/AuthController.html",[0,0.088,3,0.159,4,0.138,5,0.138,7,0.159,8,0.026,9,0.013,10,0.013,11,0.999,13,0.999,15,1.682,16,0.474,17,1.084,18,1.239,19,2.227,20,1.641,21,1.641,22,1.641,25,2.958,26,3.112,27,1.367,29,1.693,30,1.584,31,1.297,32,1.693,33,1.669,35,1.075,36,1.834,39,2.348,40,1.075,41,2.566,43,1.161,45,2.566,47,0.724,48,2.566,49,1.682,50,1.682,51,1.682,53,0.474,56,1.075,58,1.075,62,1.161,63,1.161,66,1.259,67,1.259,68,1.682,69,1.669,73,2.566,74,1.682,76,1.682,78,1.682,177,2.304,229,1.912,253,2.304,254,1.912,255,1.912,256,3.372,257,2.261,258,2.261,259,2.261,260,1.912,261,3.45,262,2.261,263,2.261,264,3.46,265,2.261,266,2.329,267,1.912,268,2.566,269,2.261,270,2.261,271,2.261,272,2.261,273,2.261,274,2.261,275,2.261,276,2.261,277,2.261]],["title/modules/AuthModule.html",[132,1.138,238,2.058]],["body/modules/AuthModule.html",[0,0.152,3,0.275,4,0.239,5,0.239,7,0.275,8,0.025,9,0.019,10,0.019,13,2.251,47,0.812,53,0.82,132,1.9,134,1.731,135,1.731,136,2.011,137,2.011,138,1.731,139,2.906,140,2.011,143,2.615,144,2.011,145,1.863,238,3.866,253,3.779,266,3.545,267,3.311,278,3.311,279,3.311,280,3.916,281,3.916]],["title/injectables/AuthService.html",[100,0.997,266,1.887]],["body/injectables/AuthService.html",[0,0.088,1,1.921,3,0.159,4,0.138,5,0.138,7,0.159,8,0.026,9,0.013,10,0.013,16,0.474,17,1.084,18,1.239,19,2.227,20,1.641,21,1.641,22,1.641,27,1.367,29,1.693,30,1.584,31,1.297,32,1.693,33,1.79,35,1.641,36,1.584,39,2.518,40,1.641,43,1.772,47,0.601,53,0.474,56,1.075,58,1.075,63,2.588,69,1.736,83,2.54,100,1.014,107,2.566,110,1.161,115,1.51,156,1.161,164,1.912,166,2.998,174,1.161,177,2.304,180,2.566,202,1.912,216,3.367,217,1.373,218,1.51,255,2.917,256,3.25,260,2.917,264,3.356,266,1.921,268,2.566,282,1.912,283,2.261,284,2.261,285,2.261,286,2.261,287,2.261,288,2.261,289,2.261,290,2.261,291,3.45,292,1.912,293,1.682]],["title/classes/CreateAdminDto.html",[0,0.131,24,1.887]],["body/classes/CreateAdminDto.html",[0,0.148,2,1.119,3,0.267,4,0.232,5,0.232,7,0.267,8,0.025,9,0.019,10,0.019,16,0.797,24,2.782,25,3.107,27,1.436,30,1.753,31,1.436,36,1.985,47,0.546,62,1.954,177,3.727,178,3.727,294,5.011,295,2.831,296,2.566,297,6.438,298,3.805,299,3.805,300,3.805]],["title/classes/CreateAuthDto.html",[0,0.131,256,1.887]],["body/classes/CreateAuthDto.html",[0,0.169,2,1.282,3,0.306,4,0.266,5,0.266,7,0.306,8,0.024,9,0.02,10,0.02,16,0.913,27,1.403,31,1.403,36,1.959,178,3.974,256,3.036,296,2.8,301,5.031,302,3.243,303,5.95,304,4.36,305,4.36]],["title/classes/CreateSessionDto.html",[0,0.131,306,1.887]],["body/classes/CreateSessionDto.html",[0,0.194,2,1.473,3,0.352,4,0.306,5,0.306,7,0.352,8,0.023,9,0.022,10,0.022,306,3.303,307,4.235,308,3.726]],["title/classes/CreateUserDto.html",[0,0.131,309,1.887]],["body/classes/CreateUserDto.html",[0,0.194,2,1.473,3,0.352,4,0.306,5,0.306,7,0.352,8,0.023,9,0.022,10,0.022,309,3.303,310,4.235,311,3.726]],["title/modules/PgModule.html",[132,1.138,239,2.058]],["body/modules/PgModule.html",[0,0.141,3,0.255,4,0.222,5,0.222,7,0.255,8,0.026,9,0.018,10,0.018,47,0.696,53,0.761,132,1.832,134,1.606,135,1.606,136,1.866,137,1.866,138,1.606,139,2.801,140,2.801,143,2.489,144,1.866,145,1.729,152,4.099,159,3.762,239,3.866,312,3.073,313,3.073,314,3.073,315,3.634,316,3.634]],["title/injectables/PgService.html",[100,0.997,159,1.887]],["body/injectables/PgService.html",[0,0.075,3,0.137,4,0.119,5,0.119,7,0.137,8,0.026,9,0.011,10,0.011,16,0.408,17,0.965,27,1.286,29,1.031,30,0.965,31,0.979,32,1.031,33,1.357,36,1.753,47,0.546,53,0.643,69,0.965,83,3.598,85,2.54,87,2.54,95,2.884,100,0.903,104,1.447,109,1.447,110,1.576,113,2.05,156,0.999,159,1.709,170,2.596,174,1.576,178,2.05,182,1.299,189,2.829,197,3.975,296,1.576,317,1.645,318,4.422,319,4.995,320,4.995,321,3.803,322,3.07,323,1.945,324,1.945,325,3.07,326,5.42,327,1.945,328,2.596,329,1.945,330,1.945,331,1.447,332,1.645,333,1.945,334,3.07,335,2.596,336,2.596,337,3.07,338,3.07,339,3.07,340,3.07,341,3.07,342,3.07,343,1.945,344,1.945,345,3.07,346,3.07,347,1.945,348,1.945,349,1.945,350,1.945,351,1.945]],["title/classes/RedisIoAdapter.html",[0,0.131,352,2.521]],["body/classes/RedisIoAdapter.html",[0,0.115,2,0.876,3,0.209,4,0.182,5,0.182,7,0.209,8,0.026,9,0.016,10,0.016,16,0.624,17,1.328,27,1.264,29,1,30,0.936,31,1.088,32,1,33,1.328,47,0.768,69,0.936,83,2.983,85,3.281,95,2.823,105,3.281,113,1.989,166,2.523,232,2.823,296,2.17,328,2.518,336,2.518,352,3.144,353,2.518,354,2.566,355,4.913,356,4.913,357,5.347,358,4.226,359,4.226,360,2.978,361,2.978,362,4.226,363,5.347,364,5.347,365,2.978,366,2.518,367,3.144,368,2.978,369,2.518,370,2.518,371,4.226,372,2.518,373,2.978,374,2.978,375,2.978,376,4.226,377,2.978,378,2.978,379,2.978,380,2.978,381,2.978,382,2.978,383,2.978]],["title/classes/Session.html",[0,0.131,384,1.887]],["body/classes/Session.html",[0,0.195,2,1.482,3,0.354,4,0.308,5,0.308,7,0.354,8,0.024,9,0.022,10,0.022,384,3.316,385,4.261]],["title/classes/SessionGateway.html",[0,0.131,386,2.264]],["body/classes/SessionGateway.html",[0,0.088,2,0.665,3,0.159,4,0.138,5,0.138,7,0.159,8,0.026,9,0.013,10,0.013,16,0.474,17,1.084,18,1.239,19,2.227,20,1.641,21,1.641,22,1.641,25,2.958,27,1.422,29,1.693,30,1.584,31,1.297,32,1.693,33,1.669,35,1.075,39,2.069,40,1.075,47,0.763,52,1.912,53,0.474,56,1.075,58,1.075,66,1.259,67,1.259,69,1.584,87,1.51,166,2.728,306,2.958,386,2.304,387,1.912,388,4.681,389,2.261,390,2.958,391,2.261,392,1.912,393,3.45,394,2.261,395,3.45,396,2.261,397,3.45,398,2.261,399,2.261,400,2.261,401,2.261,402,3.45,403,2.261,404,2.261,405,3.356,406,3.45,407,2.261,408,3.45,409,2.261,410,2.261,411,1.912,412,1.912,413,2.566,414,1.51,415,2.261,416,3.45,417,2.261,418,2.261,419,2.261,420,2.261,421,2.261,422,2.261,423,2.261,424,2.261,425,2.261,426,2.261,427,2.261,428,2.261]],["title/guards/SessionGuard.html",[80,2.521,414,2.264]],["body/guards/SessionGuard.html",[0,0.132,3,0.239,4,0.208,5,0.208,7,0.239,8,0.026,9,0.017,10,0.017,16,0.713,17,1.458,27,0.876,29,1.143,30,1.07,31,0.876,32,1.143,33,1.07,47,0.757,53,0.713,69,1.07,81,2.532,84,5.013,91,2.879,92,4.791,94,3.922,95,3.098,100,1.364,104,2.532,105,3.098,128,2.274,318,2.879,367,2.532,384,1.895,414,3.098,429,2.879,430,3.404,431,4.639,432,5.277,433,2.879,434,4.639,435,3.404,436,5.277,437,3.404,438,3.404,439,3.404,440,3.404,441,3.404]],["title/modules/SessionModule.html",[132,1.138,240,2.058]],["body/modules/SessionModule.html",[0,0.154,3,0.279,4,0.243,5,0.243,7,0.279,8,0.025,9,0.019,10,0.019,47,0.818,53,0.833,132,1.914,134,1.756,135,1.756,136,2.04,137,2.04,138,1.756,139,2.926,140,2.04,143,2.64,144,2.04,145,1.89,240,3.881,386,3.433,390,3.559,412,3.36,442,3.36,443,3.36,444,3.974,445,3.974]],["title/injectables/SessionService.html",[100,0.997,390,1.887]],["body/injectables/SessionService.html",[0,0.104,3,0.189,4,0.164,5,0.164,7,0.189,8,0.025,9,0.015,10,0.015,16,0.564,17,1.234,18,1.411,19,2.427,20,1.868,21,1.868,22,1.868,27,1.397,29,1.713,30,1.603,31,1.313,32,1.713,33,1.781,35,1.868,36,1.603,39,2.505,40,1.868,43,2.017,47,0.666,53,0.564,56,1.28,58,1.28,69,1.705,100,1.155,110,1.381,156,1.381,166,3.142,216,3.408,217,1.634,218,1.797,293,2.001,306,3.021,335,2.275,384,2.841,390,2.187,392,3.322,405,3.554,413,2.922,446,2.275,447,2.69,448,2.69,449,2.69,450,2.69,451,2.69]],["title/classes/UpdateAdminDto.html",[0,0.131,44,2.058]],["body/classes/UpdateAdminDto.html",[0,0.178,2,1.347,3,0.322,4,0.28,5,0.28,7,0.322,8,0.025,9,0.021,10,0.021,18,1.645,24,2.551,44,3.415,47,0.807,57,3.409,62,2.353,295,3.409,354,3.415,452,3.875,453,5.624,454,3.06]],["title/classes/UpdateAuthDto.html",[0,0.131,264,2.058]],["body/classes/UpdateAuthDto.html",[0,0.177,2,1.34,3,0.32,4,0.278,5,0.278,7,0.32,8,0.025,9,0.021,10,0.021,18,1.636,47,0.805,256,2.537,264,3.403,268,3.389,302,3.389,354,3.403,454,3.043,455,3.853,456,5.604,457,3.853,458,3.853]],["title/classes/UpdateSessionDto.html",[0,0.131,405,2.058]],["body/classes/UpdateSessionDto.html",[0,0.164,2,1.242,3,0.297,4,0.258,5,0.258,7,0.297,8,0.025,9,0.02,10,0.02,16,0.885,18,1.516,27,1.087,31,1.087,39,2.592,47,0.767,166,2.744,296,2.744,306,2.351,308,3.141,354,3.245,405,3.245,413,3.141,454,2.82,457,3.571,458,3.571,459,4.519,460,5.345,461,4.223]],["title/classes/UpdateUserDto.html",[0,0.131,462,2.058]],["body/classes/UpdateUserDto.html",[0,0.178,2,1.347,3,0.322,4,0.28,5,0.28,7,0.322,8,0.025,9,0.021,10,0.021,18,1.645,47,0.807,62,2.353,309,2.551,311,3.409,354,3.415,454,3.06,462,3.415,463,3.875,464,5.624,465,3.409]],["title/classes/User.html",[0,0.131,174,1.741]],["body/classes/User.html",[0,0.195,2,1.482,3,0.354,4,0.308,5,0.308,7,0.354,8,0.024,9,0.022,10,0.022,174,3.058,466,4.261]],["title/controllers/UsersController.html",[11,1.498,467,2.264]],["body/controllers/UsersController.html",[0,0.096,3,0.174,4,0.152,5,0.152,7,0.174,8,0.026,9,0.014,10,0.014,11,1.098,13,1.098,15,1.847,16,0.52,17,1.164,18,1.33,19,2.335,20,1.761,21,1.761,22,1.761,25,2.923,26,3.294,27,1.351,29,1.648,30,1.542,31,1.263,32,1.648,33,1.65,35,1.181,36,1.883,39,2.434,40,1.181,41,2.755,43,1.275,45,2.755,47,0.705,48,2.755,49,1.847,50,1.847,51,1.847,53,0.52,56,1.181,58,1.181,66,1.383,67,1.383,68,1.847,69,1.65,73,2.755,74,1.847,76,1.847,78,1.847,187,1.847,309,3.066,462,3.56,465,2.755,467,2.473,468,2.1,469,2.1,470,2.483,471,2.483,472,2.483,473,2.483,474,2.483,475,2.465,476,2.1,477,2.483,478,2.483,479,2.483,480,2.483,481,2.483,482,2.483]],["title/modules/UsersModule.html",[132,1.138,241,2.058]],["body/modules/UsersModule.html",[0,0.152,3,0.275,4,0.239,5,0.239,7,0.275,8,0.025,9,0.019,10,0.019,13,2.251,47,0.812,53,0.82,132,1.9,134,1.731,135,1.731,136,2.011,137,2.011,138,1.731,139,2.906,140,2.011,143,2.615,144,2.011,145,1.863,241,3.866,467,3.779,475,3.545,476,3.311,483,3.311,484,3.311,485,3.916,486,3.916]],["title/injectables/UsersService.html",[100,0.997,475,1.887]],["body/injectables/UsersService.html",[0,0.103,3,0.187,4,0.163,5,0.163,7,0.187,8,0.025,9,0.014,10,0.014,16,0.558,17,1.225,18,1.4,19,2.416,20,1.855,21,1.855,22,1.855,27,1.391,29,1.705,30,1.596,31,1.307,32,1.705,33,1.833,35,1.855,36,1.698,39,2.496,40,1.855,43,2.002,47,0.662,53,0.558,56,1.267,58,1.267,69,1.698,100,1.147,110,1.368,156,1.368,166,3.134,174,2.608,187,1.981,216,3.61,217,1.617,218,1.779,293,1.981,309,3.009,462,3.543,465,2.901,469,3.298,475,2.171,487,2.252,488,2.664,489,2.664,490,2.664,491,2.664,492,2.664]],["title/coverage.html",[493,3.441]],["body/coverage.html",[0,0.245,1,1.295,5,0.142,6,1.967,8,0.025,9,0.013,10,0.013,11,2.1,12,1.554,14,1.967,24,1.295,31,0.599,44,1.412,54,1.295,59,1.554,63,1.81,80,2.622,82,1.967,100,1.58,110,1.194,138,1.028,157,1.967,159,1.295,173,1.967,174,1.194,219,1.554,220,1.967,226,1.295,249,1.967,252,1.967,253,1.554,254,1.967,256,1.295,264,1.412,266,1.295,282,1.967,294,1.967,295,2.622,301,1.967,302,2.622,306,1.295,307,1.967,308,2.622,309,1.295,310,1.967,311,2.622,317,1.967,352,1.73,353,1.967,384,1.295,385,1.967,386,1.554,387,1.967,390,1.295,405,1.412,414,1.554,429,1.967,446,1.967,452,1.967,455,1.967,459,1.967,462,1.412,463,1.967,466,1.967,467,1.554,468,1.967,475,1.295,487,1.967,493,1.73,494,1.967,495,2.326,496,2.326,497,6.796,498,4.75,499,1.967,500,4.257,501,6.254,502,4.257,503,4.75,504,4.75,505,2.326,506,1.967,507,2.622,508,1.967,509,2.326,510,1.967,511,2.326,512,2.326]],["title/dependencies.html",[135,1.802,513,2.394]],["body/dependencies.html",[8,0.026,9,0.019,10,0.019,53,0.845,62,2.071,102,2.694,103,3.41,135,1.783,172,3.41,332,3.41,366,4.389,367,3.861,369,3.41,370,3.41,372,3.41,411,3.41,433,3.41,514,5.739,515,4.033,516,4.033,517,5.19,518,4.033,519,4.033,520,4.033,521,4.033,522,4.033,523,4.033,524,4.033,525,3.41,526,4.033,527,4.033,528,4.033,529,4.033]],["title/miscellaneous/functions.html",[530,1.891,531,3.447]],["body/miscellaneous/functions.html",[8,0.023,9,0.02,10,0.02,16,0.894,29,1.807,30,1.69,31,1.098,32,1.807,36,1.69,63,2.763,138,2.605,180,3.174,182,2.85,331,3.174,384,2.376,499,3.609,506,3.609,507,3.174,508,4.549,530,2.85,531,3.609,532,4.268,533,4.268,534,3.609,535,4.268,536,4.268,537,5.38,538,5.38,539,4.268,540,4.268]],["title/index.html",[16,0.593,541,2.831,542,2.831]],["body/index.html",[4,0.155,8,0.024,9,0.014,10,0.014,120,2.153,145,2.364,189,3.696,217,1.546,223,3.19,232,1.7,493,1.894,494,2.153,543,2.546,544,2.546,545,4.494,546,2.546,547,2.546,548,2.546,549,2.546,550,2.546,551,2.153,552,4.494,553,2.546,554,2.546,555,2.546,556,4.969,557,2.546,558,4.494,559,5.751,560,2.546,561,5.751,562,2.546,563,2.546,564,2.546,565,3.772,566,2.546,567,2.546,568,2.546,569,4.494,570,2.546,571,2.546,572,2.546,573,2.546,574,2.546,575,2.546,576,2.546,577,2.546,578,2.546,579,4.969,580,3.772,581,2.546,582,4.494,583,2.546,584,4.202,585,3.772,586,2.546,587,2.546,588,2.546,589,2.546,590,2.546,591,2.546,592,4.494,593,2.546,594,2.546,595,2.546,596,3.772,597,2.546,598,2.546,599,2.546,600,4.494,601,2.546,602,2.546,603,2.546,604,2.546,605,2.546,606,2.546,607,2.546,608,3.772,609,2.546,610,2.546,611,2.546,612,2.546,613,2.546,614,3.772,615,2.546,616,2.546,617,2.546,618,3.772,619,3.772,620,2.546,621,2.546,622,2.546,623,2.546,624,2.546,625,2.546,626,2.546,627,2.546,628,2.546,629,2.546,630,2.153,631,2.546,632,2.546,633,2.546,634,2.546,635,2.546,636,2.546,637,2.546]],["title/modules.html",[134,2.044]],["body/modules.html",[8,0.021,9,0.021,10,0.021,133,2.706,134,1.97,234,2.976,238,2.706,239,2.706,240,2.706,241,2.706,584,5.566,638,6.583,639,6.583,640,6.583]],["title/overview.html",[641,3.911]],["body/overview.html",[2,0.913,8,0.025,9,0.016,10,0.016,13,1.372,54,2.798,81,2.309,132,1.042,133,3.483,134,1.372,135,1.372,136,1.594,137,1.594,138,1.372,139,1.594,140,1.594,141,2.624,142,2.624,143,2.234,144,1.594,145,1.476,156,1.594,159,3.399,226,2.798,234,4.435,235,2.624,236,2.624,237,2.624,238,3.483,239,3.61,240,3.483,241,3.483,266,2.798,278,2.624,279,2.624,292,2.624,312,2.624,313,2.624,314,2.624,390,2.798,442,2.624,443,2.624,475,2.798,483,2.624,484,2.624,641,2.624,642,4.351,643,3.103,644,3.103]],["title/properties.html",[296,2.093,513,2.394]],["body/properties.html",[8,0.025,9,0.022,10,0.022,296,2.54,525,4.183,551,4.183,630,4.183,645,4.947,646,4.947,647,4.947,648,4.947,649,4.947,650,4.947]],["title/miscellaneous/variables.html",[530,1.891,651,3.447]],["body/miscellaneous/variables.html",[8,0.024,9,0.022,10,0.022,16,1.037,128,3.304,182,3.304,331,3.68,507,3.68,510,4.981,530,3.304,534,4.183,651,4.183,652,4.947]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0.2.0",{"_index":525,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0/1",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{}}}],["10.0.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["10.4.3",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":644,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":155,"title":{},"body":{"modules/AdminModule.html":{}}}],["2",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["2.25.9",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":643,"title":{},"body":{"overview.html":{}}}],["4.7.0",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":206,"title":{},"body":{"injectables/AdminService.html":{}}}],["418",{"_index":351,"title":{},"body":{"injectables/PgService.html":{}}}],["5.1.1",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":642,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["9_",{"_index":349,"title":{},"body":{"injectables/PgService.html":{}}}],["access",{"_index":121,"title":{},"body":{"guards/AdminGuard.html":{}}}],["access_token",{"_index":209,"title":{},"body":{"injectables/AdminService.html":{}}}],["action",{"_index":216,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{}}}],["adapter",{"_index":370,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["adapterconstructor",{"_index":356,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["adds",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{}}}],["admin",{"_index":1,"title":{"classes/Admin.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.decorator",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin.dto",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/UpdateAdminDto.html":{}}}],["admin.dto.ts",{"_index":295,"title":{},"body":{"classes/CreateAdminDto.html":{},"classes/UpdateAdminDto.html":{},"coverage.html":{}}}],["admin.dto.ts:5",{"_index":299,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:7",{"_index":298,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.dto.ts:9",{"_index":300,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["admin.guad",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin.service",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":12,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminguard",{"_index":59,"title":{"guards/AdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"coverage.html":{}}}],["adminmodule",{"_index":133,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":54,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["akbarkhon",{"_index":649,"title":{},"body":{"properties.html":{}}}],["amazing",{"_index":624,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{}}}],["apihash",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiid",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apioperation",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["apioperation({summary",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":297,"title":{},"body":{"classes/CreateAdminDto.html":{}}}],["apitags",{"_index":229,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apitags('app",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('authentification",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":219,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":596,"title":{},"body":{"index.html":{}}}],["applications",{"_index":550,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":234,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":226,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":118,"title":{},"body":{"guards/AdminGuard.html":{}}}],["async",{"_index":83,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{}}}],["auth",{"_index":63,"title":{"classes/Auth.html":{}},"body":{"controllers/AdminController.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth('admin",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{}}}],["auth('admin')@get(':id",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{}}}],["auth(role",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auth.controller",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":302,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:3",{"_index":305,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.dto.ts:4",{"_index":304,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.service",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":253,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":238,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":630,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":266,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avazkhonov",{"_index":650,"title":{},"body":{"properties.html":{}}}],["await",{"_index":113,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{}}}],["backend",{"_index":648,"title":{},"body":{"properties.html":{}}}],["backers",{"_index":625,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":172,"title":{},"body":{"injectables/AdminService.html":{},"dependencies.html":{}}}],["bcrypt.hash",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{}}}],["bearer",{"_index":131,"title":{},"body":{"guards/AdminGuard.html":{}}}],["board",{"_index":617,"title":{},"body":{"index.html":{}}}],["body",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":431,"title":{},"body":{"guards/SessionGuard.html":{}}}],["bootstrap",{"_index":138,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":638,"title":{},"body":{"modules.html":{}}}],["building",{"_index":546,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":84,"title":{},"body":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{}}}],["canactivate(context",{"_index":91,"title":{},"body":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{}}}],["catch",{"_index":127,"title":{},"body":{"guards/AdminGuard.html":{}}}],["channel",{"_index":587,"title":{},"body":{"index.html":{}}}],["check",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{},"injectables/PgService.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/Admin.html":{},"classes/Auth.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Admin.html":{},"classes/Auth.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":318,"title":{},"body":{"injectables/PgService.html":{},"guards/SessionGuard.html":{}}}],["client.disconnect",{"_index":441,"title":{},"body":{"guards/SessionGuard.html":{}}}],["client.handshake.headers",{"_index":438,"title":{},"body":{"guards/SessionGuard.html":{}}}],["cluster_adminmodule",{"_index":141,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":142,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_pgmodule",{"_index":312,"title":{},"body":{"modules/PgModule.html":{},"overview.html":{}}}],["cluster_pgmodule_exports",{"_index":314,"title":{},"body":{"modules/PgModule.html":{},"overview.html":{}}}],["cluster_pgmodule_providers",{"_index":313,"title":{},"body":{"modules/PgModule.html":{},"overview.html":{}}}],["cluster_sessionmodule",{"_index":442,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_providers",{"_index":443,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":483,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":484,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":576,"title":{},"body":{"index.html":{}}}],["connection",{"_index":416,"title":{},"body":{"classes/SessionGateway.html":{}}}],["connecttoredis",{"_index":357,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["console.log('jwt",{"_index":208,"title":{},"body":{"injectables/AdminService.html":{}}}],["console.log('new",{"_index":419,"title":{},"body":{"classes/SessionGateway.html":{}}}],["console.log(cookie",{"_index":439,"title":{},"body":{"guards/SessionGuard.html":{}}}],["console.log(request.headers.cookie",{"_index":129,"title":{},"body":{"guards/AdminGuard.html":{}}}],["console.log(result.rows",{"_index":215,"title":{},"body":{"injectables/AdminService.html":{}}}],["const",{"_index":105,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/PgService.html":{},"classes/SessionGateway.html":{}}}],["constructor(jwtservice",{"_index":88,"title":{},"body":{"guards/AdminGuard.html":{}}}],["constructor(pgservice",{"_index":158,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(private",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SessionGateway.html":{},"controllers/UsersController.html":{}}}],["constructor(sessionservice",{"_index":389,"title":{},"body":{"classes/SessionGateway.html":{}}}],["context",{"_index":94,"title":{},"body":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":106,"title":{},"body":{"guards/AdminGuard.html":{}}}],["context.switchtows().getclient",{"_index":435,"title":{},"body":{"guards/SessionGuard.html":{}}}],["controller",{"_index":11,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":436,"title":{},"body":{"guards/SessionGuard.html":{}}}],["courses",{"_index":594,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":493,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["create(@messagebody",{"_index":420,"title":{},"body":{"classes/SessionGateway.html":{}}}],["create(createadmindto",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{}}}],["create(createauthdto",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["create(createsessiondto",{"_index":392,"title":{},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{}}}],["create(createuserdto",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(req",{"_index":161,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadapter",{"_index":368,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createadapter(pubclient",{"_index":381,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createadmindto",{"_index":24,"title":{"classes/CreateAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"classes/UpdateAdminDto.html":{},"coverage.html":{}}}],["createauthdto",{"_index":256,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createauthdto.password",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauthdto.username",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["createclient",{"_index":371,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createioserver",{"_index":358,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createioserver(port",{"_index":362,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["createsessiondto",{"_index":306,"title":{"classes/CreateSessionDto.html":{}},"body":{"classes/CreateSessionDto.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":309,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":341,"title":{},"body":{"injectables/PgService.html":{}}}],["declarations",{"_index":137,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminDto.html":{},"classes/SessionGateway.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":589,"title":{},"body":{"index.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"injectables/PgService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":551,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":562,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":602,"title":{},"body":{"index.html":{}}}],["discord",{"_index":586,"title":{},"body":{"index.html":{}}}],["dive",{"_index":588,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":494,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv/config",{"_index":149,"title":{},"body":{"modules/AdminModule.html":{}}}],["dto/create",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":571,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":547,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":607,"title":{},"body":{"index.html":{}}}],["enum('admin",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{}}}],["euphoria",{"_index":646,"title":{},"body":{"properties.html":{}}}],["example",{"_index":558,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":92,"title":{},"body":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{}}}],["exists",{"_index":175,"title":{},"body":{"injectables/AdminService.html":{}}}],["experience",{"_index":591,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":154,"title":{},"body":{"modules/AdminModule.html":{}}}],["export",{"_index":7,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":140,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":103,"title":{},"body":{"guards/AdminGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":354,"title":{},"body":{"classes/RedisIoAdapter.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{}}}],["extracttokenfromcookie",{"_index":86,"title":{},"body":{"guards/AdminGuard.html":{}}}],["extracttokenfromcookie(request",{"_index":96,"title":{},"body":{"guards/AdminGuard.html":{}}}],["eyj",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["few",{"_index":574,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@messagebody",{"_index":423,"title":{},"body":{"classes/SessionGateway.html":{}}}],["findone(@param('id",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["follow",{"_index":610,"title":{},"body":{"index.html":{}}}],["framework",{"_index":545,"title":{},"body":{"index.html":{}}}],["full",{"_index":606,"title":{},"body":{"index.html":{}}}],["function",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":531,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":207,"title":{},"body":{"injectables/AdminService.html":{}}}],["get(':id",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["getting",{"_index":541,"title":{"index.html":{}},"body":{}}],["global",{"_index":152,"title":{},"body":{"modules/AdminModule.html":{},"modules/PgModule.html":{}}}],["graph",{"_index":597,"title":{},"body":{"index.html":{}}}],["grow",{"_index":621,"title":{},"body":{"index.html":{}}}],["guard",{"_index":80,"title":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":81,"title":{},"body":{"guards/AdminGuard.html":{},"guards/SessionGuard.html":{},"overview.html":{}}}],["handleconnection",{"_index":388,"title":{},"body":{"classes/SessionGateway.html":{}}}],["handlers",{"_index":123,"title":{},"body":{"guards/AdminGuard.html":{}}}],["hands",{"_index":590,"title":{},"body":{"index.html":{}}}],["handy",{"_index":577,"title":{},"body":{"index.html":{}}}],["hashed_password",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["headers",{"_index":437,"title":{},"body":{"guards/SessionGuard.html":{}}}],["help",{"_index":604,"title":{},"body":{"index.html":{}}}],["here",{"_index":120,"title":{},"body":{"guards/AdminGuard.html":{},"index.html":{}}}],["host",{"_index":334,"title":{},"body":{"injectables/PgService.html":{}}}],["httpexception",{"_index":170,"title":{},"body":{"injectables/AdminService.html":{},"injectables/PgService.html":{}}}],["https://nestjs.com",{"_index":634,"title":{},"body":{"index.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["idx_users_name",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["idx_users_role",{"_index":191,"title":{},"body":{"injectables/AdminService.html":{}}}],["implements",{"_index":104,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/PgService.html":{},"guards/SessionGuard.html":{}}}],["import",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":156,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["insert",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{}}}],["installcompile",{"_index":560,"title":{},"body":{"index.html":{}}}],["interact",{"_index":598,"title":{},"body":{"index.html":{}}}],["ioadapter",{"_index":355,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["job",{"_index":614,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":616,"title":{},"body":{"index.html":{}}}],["join",{"_index":627,"title":{},"body":{"index.html":{}}}],["jwtmodule",{"_index":148,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtmodule.register",{"_index":151,"title":{},"body":{"modules/AdminModule.html":{}}}],["jwtservice",{"_index":89,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{}}}],["kamil",{"_index":631,"title":{},"body":{"index.html":{}}}],["key",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["learn",{"_index":581,"title":{},"body":{"index.html":{}}}],["legend",{"_index":136,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":637,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":619,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":612,"title":{},"body":{"index.html":{}}}],["login",{"_index":177,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{}}}],["login(@body",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(createauthdto",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["looking",{"_index":613,"title":{},"body":{"index.html":{}}}],["loop",{"_index":609,"title":{},"body":{"index.html":{}}}],["matching",{"_index":10,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":211,"title":{},"body":{"injectables/AdminService.html":{}}}],["messagebody",{"_index":410,"title":{},"body":{"classes/SessionGateway.html":{}}}],["messenger",{"_index":647,"title":{},"body":{"properties.html":{}}}],["metadata",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":530,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":618,"title":{},"body":{"index.html":{}}}],["mode",{"_index":565,"title":{},"body":{"index.html":{}}}],["module",{"_index":132,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":134,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":582,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":632,"title":{},"body":{"index.html":{}}}],["name",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":603,"title":{},"body":{"index.html":{}}}],["nest",{"_index":552,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":636,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":579,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":102,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":457,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["nestjs/platform",{"_index":366,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAdminDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":411,"title":{},"body":{"classes/SessionGateway.html":{},"dependencies.html":{}}}],["new",{"_index":110,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":544,"title":{},"body":{"index.html":{}}}],["npm",{"_index":559,"title":{},"body":{"index.html":{}}}],["number",{"_index":166,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":119,"title":{},"body":{"guards/AdminGuard.html":{}}}],["observable",{"_index":432,"title":{},"body":{"guards/SessionGuard.html":{}}}],["offer",{"_index":615,"title":{},"body":{"index.html":{}}}],["official",{"_index":592,"title":{},"body":{"index.html":{}}}],["onmoduledestroy",{"_index":319,"title":{},"body":{"injectables/PgService.html":{}}}],["onmoduleinit",{"_index":320,"title":{},"body":{"injectables/PgService.html":{}}}],["open",{"_index":620,"title":{},"body":{"index.html":{}}}],["operator",{"_index":213,"title":{},"body":{"injectables/AdminService.html":{}}}],["optional",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":363,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["other/pg.modul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":513,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":50,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":326,"title":{},"body":{"injectables/PgService.html":{}}}],["part",{"_index":605,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":454,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createadmindto",{"_index":453,"title":{},"body":{"classes/UpdateAdminDto.html":{}}}],["partialtype(createauthdto",{"_index":456,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createsessiondto",{"_index":460,"title":{},"body":{"classes/UpdateSessionDto.html":{}}}],["partialtype(createuserdto",{"_index":464,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["password",{"_index":178,"title":{},"body":{"injectables/AdminService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{}}}],["patch",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":112,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{}}}],["payload.name",{"_index":125,"title":{},"body":{"guards/AdminGuard.html":{}}}],["pg",{"_index":332,"title":{},"body":{"injectables/PgService.html":{},"dependencies.html":{}}}],["pg.service",{"_index":316,"title":{},"body":{"modules/PgModule.html":{}}}],["pgmodule",{"_index":239,"title":{"modules/PgModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PgModule.html":{},"modules.html":{},"overview.html":{}}}],["pgservice",{"_index":159,"title":{"injectables/PgService.html":{}},"body":{"injectables/AdminService.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":585,"title":{},"body":{"index.html":{}}}],["port",{"_index":336,"title":{},"body":{"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{}}}],["post",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":338,"title":{},"body":{"injectables/PgService.html":{}}}],["prefix",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{}}}],["private",{"_index":85,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{}}}],["process.env.admin_name",{"_index":126,"title":{},"body":{"guards/AdminGuard.html":{}}}],["process.env.api_hash",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process.env.api_id",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process.env.bcrypt_salt",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{}}}],["process.env.db_host",{"_index":335,"title":{},"body":{"injectables/PgService.html":{},"injectables/SessionService.html":{}}}],["process.env.db_name",{"_index":342,"title":{},"body":{"injectables/PgService.html":{}}}],["process.env.db_password",{"_index":340,"title":{},"body":{"injectables/PgService.html":{}}}],["process.env.db_port",{"_index":337,"title":{},"body":{"injectables/PgService.html":{}}}],["process.env.db_user",{"_index":339,"title":{},"body":{"injectables/PgService.html":{}}}],["process.env.jwt_secret",{"_index":116,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["process.env.test_servers",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":567,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":543,"title":{},"body":{"index.html":{}}}],["project",{"_index":556,"title":{},"body":{"index.html":{}}}],["promise",{"_index":95,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{}}}],["promise.all([pubclient.connect",{"_index":378,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["properties",{"_index":296,"title":{"properties.html":{}},"body":{"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/UpdateSessionDto.html":{},"properties.html":{}}}],["providers",{"_index":139,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pubclient",{"_index":373,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["pubclient.duplicate",{"_index":377,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["query",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{},"injectables/PgService.html":{}}}],["query(query",{"_index":325,"title":{},"body":{"injectables/PgService.html":{}}}],["query_create_table",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["questions",{"_index":583,"title":{},"body":{"index.html":{}}}],["read",{"_index":628,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/SessionGateway.html":{},"controllers/UsersController.html":{}}}],["real",{"_index":599,"title":{},"body":{"index.html":{}}}],["redis",{"_index":372,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["redis://localhost:6379",{"_index":375,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["redisioadapter",{"_index":352,"title":{"classes/RedisIoAdapter.html":{}},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["reflect",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@messagebody",{"_index":427,"title":{},"body":{"classes/SessionGateway.html":{}}}],["remove(@param('id",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":218,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":555,"title":{},"body":{"index.html":{}}}],["req",{"_index":163,"title":{},"body":{"injectables/AdminService.html":{}}}],["req.login",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{}}}],["req.name",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{}}}],["req.password",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{}}}],["request",{"_index":97,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.headers.cookie?.split",{"_index":130,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request['admin",{"_index":124,"title":{},"body":{"guards/AdminGuard.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":575,"title":{},"body":{"index.html":{}}}],["result",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["result.rowcount",{"_index":205,"title":{},"body":{"injectables/AdminService.html":{}}}],["results",{"_index":9,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returntype",{"_index":359,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["role",{"_index":180,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["route",{"_index":122,"title":{},"body":{"guards/AdminGuard.html":{}}}],["run",{"_index":561,"title":{},"body":{"index.html":{}}}],["running",{"_index":251,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"guards/SessionGuard.html":{},"dependencies.html":{}}}],["safequery",{"_index":321,"title":{},"body":{"injectables/PgService.html":{}}}],["safequery(query",{"_index":329,"title":{},"body":{"injectables/PgService.html":{}}}],["scalable",{"_index":548,"title":{},"body":{"index.html":{}}}],["secret",{"_index":115,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{}}}],["select",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{}}}],["server",{"_index":232,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/RedisIoAdapter.html":{},"index.html":{}}}],["server'})@get",{"_index":224,"title":{},"body":{"controllers/AppController.html":{}}}],["server.adapter(this.adapterconstructor",{"_index":383,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["serveroptions",{"_index":364,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["session",{"_index":384,"title":{"classes/Session.html":{}},"body":{"classes/Session.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["session.dto",{"_index":413,"title":{},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{}}}],["session.dto.ts",{"_index":308,"title":{},"body":{"classes/CreateSessionDto.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["session.dto.ts:5",{"_index":461,"title":{},"body":{"classes/UpdateSessionDto.html":{}}}],["session.gateway",{"_index":445,"title":{},"body":{"modules/SessionModule.html":{}}}],["session.service",{"_index":412,"title":{},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{}}}],["session/session.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["sessiongateway",{"_index":386,"title":{"classes/SessionGateway.html":{}},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{},"coverage.html":{}}}],["sessionguard",{"_index":414,"title":{"guards/SessionGuard.html":{}},"body":{"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"coverage.html":{}}}],["sessionmodule",{"_index":240,"title":{"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionservice",{"_index":390,"title":{"injectables/SessionService.html":{}},"body":{"classes/SessionGateway.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"coverage.html":{},"overview.html":{}}}],["sessuon.guard",{"_index":415,"title":{},"body":{"classes/SessionGateway.html":{}}}],["setup",{"_index":557,"title":{},"body":{"index.html":{}}}],["side",{"_index":549,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":153,"title":{},"body":{"modules/AdminModule.html":{}}}],["socket",{"_index":434,"title":{},"body":{"guards/SessionGuard.html":{}}}],["socket.io",{"_index":367,"title":{},"body":{"classes/RedisIoAdapter.html":{},"guards/SessionGuard.html":{},"dependencies.html":{}}}],["socket.io/redis",{"_index":369,"title":{},"body":{"classes/RedisIoAdapter.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateSessionDto.html":{},"classes/CreateUserDto.html":{},"modules/PgModule.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/Session.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":623,"title":{},"body":{"index.html":{}}}],["sql",{"_index":346,"title":{},"body":{"injectables/PgService.html":{}}}],["src/.../admin.decorator.ts",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../telegramclient.ts",{"_index":534,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/admin/admin.controller.ts",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.controller.ts:23",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:28",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:34",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:39",{"_index":46,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:44",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.decorator.ts",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/admin/admin.guad.ts",{"_index":82,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/admin/admin.guad.ts:11",{"_index":90,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/admin/admin.guad.ts:14",{"_index":93,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/admin/admin.guad.ts:37",{"_index":98,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/admin/admin.module.ts",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":157,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/admin.service.ts:15",{"_index":162,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:62",{"_index":165,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:72",{"_index":167,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:76",{"_index":169,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:80",{"_index":168,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:9",{"_index":160,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/dto/create",{"_index":294,"title":{},"body":{"classes/CreateAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/update",{"_index":452,"title":{},"body":{"classes/UpdateAdminDto.html":{},"coverage.html":{}}}],["src/admin/entities/admin.entity.ts",{"_index":6,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":220,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":249,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":250,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:26",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":301,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":455,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":252,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/other/pg.modul.ts",{"_index":315,"title":{},"body":{"modules/PgModule.html":{}}}],["src/other/pg.service",{"_index":171,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/other/pg.service.ts",{"_index":317,"title":{},"body":{"injectables/PgService.html":{},"coverage.html":{}}}],["src/other/pg.service.ts:25",{"_index":324,"title":{},"body":{"injectables/PgService.html":{}}}],["src/other/pg.service.ts:29",{"_index":323,"title":{},"body":{"injectables/PgService.html":{}}}],["src/other/pg.service.ts:33",{"_index":327,"title":{},"body":{"injectables/PgService.html":{}}}],["src/other/pg.service.ts:37",{"_index":330,"title":{},"body":{"injectables/PgService.html":{}}}],["src/other/pg.service.ts:7",{"_index":322,"title":{},"body":{"injectables/PgService.html":{}}}],["src/other/redis.ts",{"_index":353,"title":{},"body":{"classes/RedisIoAdapter.html":{},"coverage.html":{}}}],["src/other/redis.ts:18",{"_index":365,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/redis.ts:7",{"_index":360,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/redis.ts:9",{"_index":361,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["src/other/telegramclient.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/session/dto/create",{"_index":307,"title":{},"body":{"classes/CreateSessionDto.html":{},"coverage.html":{}}}],["src/session/dto/update",{"_index":459,"title":{},"body":{"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["src/session/entities/session.entity.ts",{"_index":385,"title":{},"body":{"classes/Session.html":{},"coverage.html":{}}}],["src/session/session.gateway.ts",{"_index":387,"title":{},"body":{"classes/SessionGateway.html":{},"coverage.html":{}}}],["src/session/session.gateway.ts:14",{"_index":391,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:20",{"_index":400,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:24",{"_index":394,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:29",{"_index":396,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:34",{"_index":398,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:39",{"_index":407,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.gateway.ts:44",{"_index":403,"title":{},"body":{"classes/SessionGateway.html":{}}}],["src/session/session.module.ts",{"_index":444,"title":{},"body":{"modules/SessionModule.html":{}}}],["src/session/session.service.ts",{"_index":446,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["src/session/session.service.ts:11",{"_index":448,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:15",{"_index":449,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:19",{"_index":451,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:23",{"_index":450,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:7",{"_index":447,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/sessuon.guard.ts",{"_index":429,"title":{},"body":{"guards/SessionGuard.html":{},"coverage.html":{}}}],["src/session/sessuon.guard.ts:7",{"_index":430,"title":{},"body":{"guards/SessionGuard.html":{}}}],["src/users/dto/create",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":463,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":466,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:11",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:16",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":485,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":492,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:23",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":563,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":566,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":568,"title":{},"body":{"index.html":{}}}],["started",{"_index":542,"title":{"index.html":{}},"body":{}}],["starter",{"_index":554,"title":{},"body":{"index.html":{}}}],["statements",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":608,"title":{},"body":{"index.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["subclient",{"_index":376,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subclient.connect",{"_index":379,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["subscribemessage",{"_index":409,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('connection",{"_index":418,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('createsession",{"_index":393,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('findallsession",{"_index":395,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('findonesession",{"_index":397,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('removesession",{"_index":402,"title":{},"body":{"classes/SessionGateway.html":{}}}],["subscribemessage('updatesession",{"_index":406,"title":{},"body":{"classes/SessionGateway.html":{}}}],["summary",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["super.createioserver(port",{"_index":382,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["support",{"_index":584,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":639,"title":{},"body":{"modules.html":{}}}],["table",{"_index":173,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["tablename",{"_index":212,"title":{},"body":{"injectables/AdminService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["telegram",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["telegramclient",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["telegramclient(session",{"_index":536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["test(check",{"_index":350,"title":{},"body":{"injectables/PgService.html":{}}}],["test:covresources",{"_index":573,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":572,"title":{},"body":{"index.html":{}}}],["test_servers",{"_index":510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":569,"title":{},"body":{"index.html":{}}}],["testserver",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["thanks",{"_index":622,"title":{},"body":{"index.html":{}}}],["this.adapterconstructor",{"_index":380,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["this.adminservice.create(createadmindto",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findall",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findone(+id",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.remove(+id",{"_index":79,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.update(+id",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.testserver",{"_index":233,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.create(createauthdto",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findall",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findone(+id",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(createauthdto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.remove(+id",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.update(+id",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.client",{"_index":333,"title":{},"body":{"injectables/PgService.html":{}}}],["this.client.connect",{"_index":343,"title":{},"body":{"injectables/PgService.html":{}}}],["this.client.end",{"_index":344,"title":{},"body":{"injectables/PgService.html":{}}}],["this.client.query(query",{"_index":345,"title":{},"body":{"injectables/PgService.html":{}}}],["this.extracttokenfromcookie(request",{"_index":108,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.jwtservice.signasync(payload",{"_index":210,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":114,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.pgservice.query(query",{"_index":204,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.pgservice.safequery(query",{"_index":214,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.pgservice.safequery(query_create_table",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.sessionservice.create(createsessiondto",{"_index":421,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.findall",{"_index":422,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.findone(id",{"_index":424,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.remove(id",{"_index":428,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.sessionservice.update(updatesessiondto.id",{"_index":426,"title":{},"body":{"classes/SessionGateway.html":{}}}],["this.usersservice.create(createuserdto",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":109,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/PgService.html":{}}}],["time",{"_index":600,"title":{},"body":{"index.html":{}}}],["token",{"_index":107,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{}}}],["touch",{"_index":629,"title":{},"body":{"index.html":{}}}],["true",{"_index":128,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"guards/SessionGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":111,"title":{},"body":{"guards/AdminGuard.html":{}}}],["twitter",{"_index":635,"title":{},"body":{"index.html":{}}}],["type",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"guards/AdminGuard.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminDto.html":{},"classes/CreateAuthDto.html":{},"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{},"classes/SessionGateway.html":{},"guards/SessionGuard.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":458,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateSessionDto.html":{}}}],["typescript",{"_index":553,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":101,"title":{},"body":{"guards/AdminGuard.html":{}}}],["undefined",{"_index":99,"title":{},"body":{"guards/AdminGuard.html":{}}}],["unique",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["unit",{"_index":570,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{}}}],["update",{"_index":22,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@messagebody",{"_index":425,"title":{},"body":{"classes/SessionGateway.html":{}}}],["update(@param('id",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(updatesessiondto",{"_index":404,"title":{},"body":{"classes/SessionGateway.html":{}}}],["updateadmindto",{"_index":44,"title":{"classes/UpdateAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/UpdateAdminDto.html":{},"coverage.html":{}}}],["updateauthdto",{"_index":264,"title":{"classes/UpdateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updates",{"_index":217,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/SessionService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["updatesessiondto",{"_index":405,"title":{"classes/UpdateSessionDto.html":{}},"body":{"classes/SessionGateway.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":462,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":374,"title":{},"body":{"classes/RedisIoAdapter.html":{}}}],["useguards",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"classes/SessionGateway.html":{}}}],["useguards(sessionguard",{"_index":417,"title":{},"body":{"classes/SessionGateway.html":{}}}],["useguards(sessionguard)@subscribemessage('connection",{"_index":399,"title":{},"body":{"classes/SessionGateway.html":{}}}],["user",{"_index":174,"title":{"classes/User.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/PgService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":465,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["username",{"_index":303,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["users",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":486,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":467,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":241,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":475,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":601,"title":{},"body":{"index.html":{}}}],["validate",{"_index":440,"title":{},"body":{"guards/SessionGuard.html":{}}}],["value",{"_index":331,"title":{},"body":{"injectables/PgService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["varchar(255",{"_index":176,"title":{},"body":{"injectables/AdminService.html":{}}}],["varchar(5",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["varchar(60",{"_index":179,"title":{},"body":{"injectables/AdminService.html":{}}}],["variable",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":651,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":645,"title":{},"body":{"properties.html":{}}}],["video",{"_index":593,"title":{},"body":{"index.html":{}}}],["visit",{"_index":580,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":595,"title":{},"body":{"index.html":{}}}],["void",{"_index":401,"title":{},"body":{"classes/SessionGateway.html":{}}}],["watch",{"_index":564,"title":{},"body":{"index.html":{}}}],["we're",{"_index":117,"title":{},"body":{"guards/AdminGuard.html":{}}}],["website",{"_index":633,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":408,"title":{},"body":{"classes/SessionGateway.html":{}}}],["working",{"_index":578,"title":{},"body":{"index.html":{}}}],["x",{"_index":611,"title":{},"body":{"index.html":{}}}],["yes",{"_index":328,"title":{},"body":{"injectables/PgService.html":{},"classes/RedisIoAdapter.html":{}}}],["you'd",{"_index":626,"title":{},"body":{"index.html":{}}}],["z0",{"_index":348,"title":{},"body":{"injectables/PgService.html":{}}}],["za",{"_index":347,"title":{},"body":{"injectables/PgService.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PgModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/entities/admin.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Admin {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAdminDto: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/admin/admin.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAdminDto\n                                            \n                                                            CreateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/admin/admin.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Auth('admin')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/admin/admin.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/admin/admin.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAdminDto: UpdateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/admin/admin.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAdminDto\n                                            \n                                                            UpdateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { UpdateAdminDto } from './dto/update-admin.dto';\nimport { AdminGuard } from './admin.guad';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { Auth } from './admin.decorator';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  @Post()\n  create(@Body() createAdminDto: CreateAdminDto) {\n    return this.adminService.create(createAdminDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.adminService.findAll();\n  }\n\n  @Auth('admin')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.adminService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAdminDto: UpdateAdminDto) {\n    return this.adminService.update(+id, updateAdminDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.adminService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/admin/admin.guad.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.guad.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.guad.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromCookie(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.guad.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(private jwtService: JwtService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromCookie(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['admin'] = payload;\n      if (payload.name !== process.env.ADMIN_NAME) {\n        throw new UnauthorizedException();\n      }\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromCookie(request: Request): string | undefined {\n    console.log(request.headers.cookie);\n    const [type, token] = request.headers.cookie?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { AdminController } from './admin.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport 'dotenv/config';\n@Module({\n  imports: [\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '1d' },\n    }),\n  ],\n  controllers: [AdminController],\n  providers: [AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pgService: PgService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pgService\n                                                  \n                                                        \n                                                                        PgService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: CreateAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            CreateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAdminDto: UpdateAdminDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin/admin.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAdminDto\n                                            \n                                                            UpdateAdminDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { CreateAdminDto } from './dto/create-admin.dto';\nimport { UpdateAdminDto } from './dto/update-admin.dto';\nimport { PgService } from 'src/other/pg.service';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AdminService {\n  constructor(\n    private readonly pgService: PgService,\n    private jwtService: JwtService,\n  ) {}\n\n  async create(req: CreateAdminDto) {\n    // create table user if not exists name varchar(255), login varchar(255), password varchar(60) , role enum('admin', 'user') default 'user' , primary key (login) , unique (login);\n    const query_create_table = `\n    CREATE TABLE IF NOT EXISTS \"Users\" (\n      \"name\" VARCHAR(255),\n      \"login\" VARCHAR(255),\n      \"password\" VARCHAR(60),\n      \"role\" VARCHAR(5) CHECK (\"role\" IN ('admin', 'user')) DEFAULT 'user',\n      PRIMARY KEY (\"login\"),\n      UNIQUE (\"login\")\n    );\n  \n    CREATE INDEX IF NOT EXISTS idx_users_name ON \"Users\" (\"name\");\n    CREATE INDEX IF NOT EXISTS idx_users_role ON \"Users\" (\"role\");\n  `;\n    await this.pgService.safeQuery(query_create_table, 'Users');\n\n    const hashed_password = await bcrypt.hash(\n      req.password,\n      +process.env.BCRYPT_SALT,\n    );\n    const query = `\n      INSERT INTO \"Users\" (\"name\", \"login\", \"password\", \"role\")\n      SELECT '${req.name}', '${req.login}', '${hashed_password}', 'admin'\n      WHERE NOT EXISTS (\n          SELECT 1 FROM \"Users\" WHERE \"login\" = '${req.login}'\n      );\n    `;\n\n    const result = await this.pgService.query(query);\n    if (!result.rowCount) {\n      throw new HttpException(\n        'Пользователь с таким логином уже существует',\n        400,\n      );\n    } else {\n      //generate token\n      console.log('JWT Secret:', process.env.JWT_SECRET);\n      const payload = { login: req.login, role: 'admin' };\n      const access_token = await this.jwtService.signAsync(payload);\n      return {\n        message: 'Пользователь успешно создан',\n        token: access_token,\n      };\n    }\n  }\n\n  async findAll() {\n    const tableName = 'Operator'; // Динамическое имя таблицы (ввод пользователя или из переменной)\n\n    const query = `SELECT * FROM \"${tableName}\"`; // Динамическое формирование запроса с именем таблицы\n\n    const result = await this.pgService.safeQuery(query, tableName); // Выполняем запрос\n    console.log(result.rows);\n    return `This action returns all admin`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} admin`;\n  }\n\n  update(id: number, updateAdminDto: UpdateAdminDto) {\n    return `This action updates a #${id} admin`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} admin`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                testServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        testServer\n                        \n                    \n                \n            \n            \n                \n                        \n                    testServer()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Test server'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('App')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n  @ApiOperation({ summary: 'Test server' })\n  @Get()\n  testServer(): string {\n    return this.appService.testServer();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPgModule\n\nPgModule\n\nAppModule -->\n\nPgModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            PgModule\n                        \n                        \n                            SessionModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { SessionModule } from './session/session.module';\nimport { UsersModule } from './users/users.module';\nimport { AdminModule } from './admin/admin.module';\nimport { PgModule } from './other/pg.modul';\n@Module({\n  imports: [PgModule, AuthModule, SessionModule, UsersModule, AdminModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testServer\n                        \n                    \n                \n            \n            \n                \ntestServer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  testServer(): string {\n    return 'Server is running!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAuthDto: UpdateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthDto\n                                            \n                                                            UpdateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Authentification')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  login(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.login(createAuthDto);\n  }\n  @Post()\n  create(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.create(createAuthDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.authService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.authService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAuthDto: UpdateAuthDto) {\n    return this.authService.update(+id, updateAuthDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.authService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(createAuthDto: CreateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateAuthDto: UpdateAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAuthDto\n                                            \n                                                            UpdateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\n\n@Injectable()\nexport class AuthService {\n  async login(createAuthDto: CreateAuthDto) {\n    if (\n      createAuthDto.username === 'admin' &&\n      createAuthDto.password === 'secret'\n    ) {\n      return {\n        id: 1,\n        token: 'eyJ',\n        role: 'admin',\n      };\n    } else {\n      return {\n        id: 2,\n        token: 'eyJ',\n        role: 'user',\n      };\n    }\n  }\n\n  create(createAuthDto: CreateAuthDto) {\n    return 'This action adds a new auth';\n  }\n\n  findAll() {\n    return `This action returns all auth`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} auth`;\n  }\n\n  update(id: number, updateAuthDto: UpdateAuthDto) {\n    return `This action updates a #${id} auth`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} auth`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminDto.html":{"url":"classes/CreateAdminDto.html","title":"class - CreateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/create-admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/create-admin.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAdminDto {\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  login: string;\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-auth.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSessionDto.html":{"url":"classes/CreateSessionDto.html","title":"class - CreateSessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/create-session.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSessionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PgModule.html":{"url":"modules/PgModule.html","title":"module - PgModule","body":"\n                   \n\n\n\n\n    Modules\n    PgModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PgModule\n\n\n\ncluster_PgModule_providers\n\n\n\ncluster_PgModule_exports\n\n\n\n\nPgService \n\nPgService \n\n\n\nPgModule\n\nPgModule\n\nPgService  -->\n\nPgModule->PgService \n\n\n\n\n\nPgService\n\nPgService\n\nPgModule -->\n\nPgService->PgModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/other/pg.modul.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PgService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PgService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PgService } from './pg.service';\n\n@Global() // Делаем модуль глобальным\n@Module({\n  providers: [PgService],\n  exports: [PgService], // Экспортируем PgService для использования в других модулях\n})\nexport class PgModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PgService.html":{"url":"injectables/PgService.html","title":"injectable - PgService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PgService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/pg.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                query\n                            \n                            \n                                    Async\n                                safeQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/other/pg.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/pg.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/pg.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(query: string, params?: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/pg.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        safeQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeQuery(query: string, check: string, params?: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/pg.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                check\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                params\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Client\n\n                    \n                \n                    \n                        \n                                Defined in src/other/pg.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { Client } from 'pg';\nimport { HttpException } from '@nestjs/common';\n\n@Injectable()\nexport class PgService implements OnModuleInit, OnModuleDestroy {\n  private client: Client;\n\n  constructor() {\n    this.client = new Client({\n      host: process.env.DB_HOST, // Хост базы данных\n      port: +process.env.DB_PORT, // Порт PostgreSQL\n      user: process.env.DB_USER, // Имя пользователя\n      password: process.env.DB_PASSWORD, // Пароль\n      database: process.env.DB_NAME, // Имя базы данных\n    });\n  }\n\n  // host: process.env.DB_HOST, // Хост базы данных\n  // port: process.env.DB_PORT, // Порт PostgreSQL\n  // user: process.env.DB_USER, // Имя пользователя\n  // password: process.env.DB_PASSWORD, // Пароль\n  // database: process.env.DB_NAME, // Имя базы данных\n\n  async onModuleInit() {\n    await this.client.connect(); // Устанавливаем подключение при запуске модуля\n  }\n\n  async onModuleDestroy() {\n    await this.client.end(); // Закрываем подключение при завершении работы модуля\n  }\n\n  async query(query: string, params?: any[]): Promise {\n    return this.client.query(query, params); // Выполнение SQL-запроса\n  }\n\n  async safeQuery(\n    query: string,\n    check: string = '',\n    params?: any[],\n  ): Promise {\n    // Проверяем, что запрос не содержит опасных символов\n    if (!/^[a-zA-Z0-9_.,()'\" ]+$/.test(check)) {\n      throw new HttpException('Не пытайся взломать 😊', 418);\n    }\n    return this.client.query(query, params); // Выполнение SQL-запроса\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisIoAdapter.html":{"url":"classes/RedisIoAdapter.html","title":"class - RedisIoAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisIoAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/other/redis.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IoAdapter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adapterConstructor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectToRedis\n                            \n                            \n                                createIOServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        adapterConstructor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReturnType<>\n\n                    \n                \n                    \n                        \n                                Defined in src/other/redis.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        connectToRedis\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectToRedis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/redis.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createIOServer\n                        \n                    \n                \n            \n            \n                \ncreateIOServer(port: number, options?: ServerOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/other/redis.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        ServerOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IoAdapter } from '@nestjs/platform-socket.io';\nimport { ServerOptions } from 'socket.io';\nimport { createAdapter } from '@socket.io/redis-adapter';\nimport { createClient } from 'redis';\n\nexport class RedisIoAdapter extends IoAdapter {\n  private adapterConstructor: ReturnType;\n\n  async connectToRedis(): Promise {\n    const pubClient = createClient({ url: `redis://localhost:6379` });\n    const subClient = pubClient.duplicate();\n\n    await Promise.all([pubClient.connect(), subClient.connect()]);\n\n    this.adapterConstructor = createAdapter(pubClient, subClient);\n  }\n\n  createIOServer(port: number, options?: ServerOptions): any {\n    const server = super.createIOServer(port, options);\n    server.adapter(this.adapterConstructor);\n    return server;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session.html":{"url":"classes/Session.html","title":"class - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/entities/session.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Session {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionGateway.html":{"url":"classes/SessionGateway.html","title":"class - SessionGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                handleConnection\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/session/session.gateway.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSessionDto: CreateSessionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('createSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSessionDto\n                                            \n                                                            CreateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findAllSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('findOneSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(SessionGuard)@SubscribeMessage('connection')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('removeSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSessionDto: UpdateSessionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('updateSession')\n                \n            \n\n                    \n                        \n                            Defined in src/session/session.gateway.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSessionDto\n                                            \n                                                            UpdateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  \n} from '@nestjs/websockets';\nimport { SessionService } from './session.service';\nimport { CreateSessionDto } from './dto/create-session.dto';\nimport { UpdateSessionDto } from './dto/update-session.dto';\nimport { UseGuards } from '@nestjs/common';\nimport { SessionGuard } from './sessuon.guard';\n\n@WebSocketGateway()\nexport class SessionGateway {\n  constructor(private readonly sessionService: SessionService) {}\n\n  // on connection\n  @UseGuards(SessionGuard)\n  @SubscribeMessage('connection')\n  handleConnection() {\n    console.log('New connection');\n  }\n  @SubscribeMessage('createSession')\n  create(@MessageBody() createSessionDto: CreateSessionDto) {\n    return this.sessionService.create(createSessionDto);\n  }\n\n  @SubscribeMessage('findAllSession')\n  findAll() {\n    return this.sessionService.findAll();\n  }\n\n  @SubscribeMessage('findOneSession')\n  findOne(@MessageBody() id: number) {\n    return this.sessionService.findOne(id);\n  }\n\n  @SubscribeMessage('updateSession')\n  update(@MessageBody() updateSessionDto: UpdateSessionDto) {\n    return this.sessionService.update(updateSessionDto.id, updateSessionDto);\n  }\n\n  @SubscribeMessage('removeSession')\n  remove(@MessageBody() id: number) {\n    return this.sessionService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SessionGuard.html":{"url":"guards/SessionGuard.html","title":"guard - SessionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SessionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/session/sessuon.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/sessuon.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'socket.io';\n\n@Injectable()\nexport class SessionGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const client: Socket = context.switchToWs().getClient();\n\n    // Get the cookie from the headers\n    const cookie = client.handshake.headers;\n    console.log(cookie);\n\n    // Validate the session\n    if (!cookie) {\n      client.disconnect();\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionModule.html":{"url":"modules/SessionModule.html","title":"module - SessionModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nSessionService\n\nSessionService\n\n\n\nSessionModule\n\nSessionModule\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SessionService } from './session.service';\nimport { SessionGateway } from './session.gateway';\n\n@Module({\n  providers: [SessionGateway, SessionService],\n})\nexport class SessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createSessionDto: CreateSessionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSessionDto\n                                            \n                                                            CreateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSessionDto: UpdateSessionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSessionDto\n                                            \n                                                            UpdateSessionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSessionDto } from './dto/create-session.dto';\nimport { UpdateSessionDto } from './dto/update-session.dto';\n\n@Injectable()\nexport class SessionService {\n  create(createSessionDto: CreateSessionDto) {\n    return 'This action adds a new session';\n  }\n\n  findAll() {\n    return process.env.DB_HOST;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} session`;\n  }\n\n  update(id: number, updateSessionDto: UpdateSessionDto) {\n    return `This action updates a #${id} session`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} session`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAdminDto.html":{"url":"classes/UpdateAdminDto.html","title":"class - UpdateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/update-admin.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAdminDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAdminDto } from './create-admin.dto';\n\nexport class UpdateAdminDto extends PartialType(CreateAdminDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSessionDto.html":{"url":"classes/UpdateSessionDto.html","title":"class - UpdateSessionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSessionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/update-session.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSessionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/session/dto/update-session.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSessionDto } from './create-session.dto';\n\nexport class UpdateSessionDto extends PartialType(CreateSessionDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  create(createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n  findAll() {\n    return `This action returns all users`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/admin/admin.decorator.ts\n            \n            function\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/admin.guad.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/dto/create-admin.dto.ts\n            \n            class\n            CreateAdminDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/dto/update-admin.dto.ts\n            \n            class\n            UpdateAdminDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/entities/admin.entity.ts\n            \n            class\n            Admin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/other/pg.service.ts\n            \n            injectable\n            PgService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/other/redis.ts\n            \n            class\n            RedisIoAdapter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/other/telegramClient.ts\n            \n            function\n            telegramClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/other/telegramClient.ts\n            \n            variable\n            TEST_SERVERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/dto/create-session.dto.ts\n            \n            class\n            CreateSessionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/dto/update-session.dto.ts\n            \n            class\n            UpdateSessionDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/session/entities/session.entity.ts\n            \n            class\n            Session\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/session.gateway.ts\n            \n            class\n            SessionGateway\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/session/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/session/sessuon.guard.ts\n            \n            guard\n            SessionGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.4.3\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/websockets : ^10.4.3\n        \n            @socket.io/redis-adapter : ^8.3.0\n        \n            bcrypt : ^5.1.1\n        \n            pg : ^8.13.0\n        \n            redis : ^4.7.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.0\n        \n            telegram : ^2.25.9\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Auth   (src/.../admin.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            telegramClient   (src/.../telegramClient.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/admin.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n            \n                \nAuth(role: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/other/telegramClient.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        telegramClient\n                        \n                    \n                \n            \n            \n                \ntelegramClient(session, apiId, apiHash)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                session\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                apiId\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    process.env.API_ID\n                                            \n\n                                        \n                                        \n                                                apiHash\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    process.env.API_HASH\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PgModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PgModule\n\n\n\ncluster_PgModule_exports\n\n\n\ncluster_PgModule_providers\n\n\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPgModule\n\nPgModule\n\nAppModule -->\n\nPgModule->AppModule\n\n\n\n\n\nPgService \n\nPgService \n\nPgService  -->\n\nPgModule->PgService \n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPgService\n\nPgService\n\nPgModule -->\n\nPgService->PgModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n        \n            Description : euphoria-messenger-backend\n        \n            Author : Akbarkhon !Avazkhonov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TEST_SERVERS   (src/.../telegramClient.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/other/telegramClient.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TEST_SERVERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.TEST_SERVERS == 'true'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
